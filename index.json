[{"categories":["documentation","文本教程"],"content":"这是一篇用自己的服务器搭建云端IDE，从而实现多平台写代码的效果。","date":"2020-06-20","objectID":"/codeserver/","tags":["教程","code-server"],"title":"搭建自己的云端IDE","uri":"/codeserver/"},{"categories":["documentation","文本教程"],"content":"服务器搭建code server 本篇教程所用到的是阿里云的服务器1m带宽，2核，4g运存 ","date":"2020-06-20","objectID":"/codeserver/:0:0","tags":["教程","code-server"],"title":"搭建自己的云端IDE","uri":"/codeserver/"},{"categories":["documentation","文本教程"],"content":"1.拥有一个自己的服务器 系统选择ubuntu最新的就行 2.下载对应的code server文件 点击这里查看不同版本的code server 服务器是ubuntu系统，这里我们选择code-server-3.4.1-linux-x86_64.tar.gz 有多种将文件下载到服务器的方法，这里我选择将文件下载到本地，然后通过sftp上传到服务器 关于ssh远程连接服务器，请自行谷歌，这里不进行讲述 将文件下载到桌面上 //在连接好服务器后，输入下面的命令将文件上传到服务器的root目录下 put C:\\Users\\lenovo\\Desktop\\code-server-3.4.1-linux-x86_64.tar.gz /root/ ssh连接到服务器 #输入下面的命令解压文件 tar -xzf code-server-3.4.1-linux-x86_64.tar.gz #进入code-server-3.4.1-linux-x86_64文件夹下后执行下面的代码查看帮助信息 ./code-server -h #直接输入指令 ./code-server #即可启动codeserver 启动成功后会出现下面的信息： 这个时候你在你的浏览器输入你服务器的公网ip+端口8080，回车 你会发现 如何解决呢？ ","date":"2020-06-20","objectID":"/codeserver/:1:0","tags":["教程","code-server"],"title":"搭建自己的云端IDE","uri":"/codeserver/"},{"categories":["documentation","文本教程"],"content":"3.阿里云服务器设置 打开本实例安全组 点击配置规则 点击手动添加，添加一条规则，内容如红色方框中的一样 接下来你在你的浏览器输入你服务器的公网ip+端口8080，回车 你会发现 为什么呢？？？ code-server默认只能够监听本地地址，也就是 127.0.0.1 如果想要远程监控则需要添加一些参数 #命令如下 ./code-server --host 0.0.0.0 --port 8080 # --host 监听地址 # --port 监听端口 #查看登陆密码 cat ~/.config/code-server/config.yaml #如果你嫌密码难记可以自定义密码，下面那样的代码就可以实现 export PASSWORD=\"sixsixsix\" \u0026\u0026 code-server --host 0.0.0.0 --port 8080 执行这命令后，你在你的浏览器输入你服务器的公网ip+端口8080 你会发现，终于TMD能用了 ","date":"2020-06-20","objectID":"/codeserver/:2:0","tags":["教程","code-server"],"title":"搭建自己的云端IDE","uri":"/codeserver/"},{"categories":["documentation","文本教程"],"content":"4.后台运行 当你断开ssh连接之后，你会发现你连接不上服务器了。因为终端断掉项目就终止运行了。 这里提供一个方法：screen #开启新会话 screen -S myCodeserver # myCodeserver可以随便命名，执行后你会进入一个新的窗口 cd code-server # 进入可执行文件的目录 export PASSWORD=\"sixsixsix\" \u0026\u0026 code-server --host 0.0.0.0 --port 8080 #执行代码启动code server 按住ctrl+A+D 退出创建的screen 输入指令：screen -ls，即可查看所有的screen 想要恢复某个screen，指令为screen -r screen名 具体想了解screen命令的点我 ","date":"2020-06-20","objectID":"/codeserver/:3:0","tags":["教程","code-server"],"title":"搭建自己的云端IDE","uri":"/codeserver/"},{"categories":["documentation","文本教程"],"content":"5.结语 以上就是我服务器创建code server过程，其中踩了不少坑，希望对渴求知识的你有所帮助^_^ 总结要用到的命令就是： export PASSWORD=\"sixsixsix\" \u0026\u0026 code-server --host 0.0.0.0 --port 8080 cat ~/.config/code-server/config.yaml ","date":"2020-06-20","objectID":"/codeserver/:4:0","tags":["教程","code-server"],"title":"搭建自己的云端IDE","uri":"/codeserver/"},{"categories":["documentation"],"content":"keras学习笔记（二） 快速开始函数式（Functional）模型 我们起初将Functional一词译作泛型，想要表达该类模型能够表达任意张量映射的含义，但表达的不是很精确，在Keras2里我们将这个词改译为“函数式”，对函数式编程有所了解的同学应能够快速get到该类模型想要表达的含义。函数式模型称作Functional，但它的类名是Model,因此我们有时候也用Model来代表函数式模型。 第一个模型：全连接网络 ","date":"2020-12-20","objectID":"/kerasnote2/:0:0","tags":["keras","人工智能"],"title":"Keras","uri":"/kerasnote2/"},{"categories":["documentation"],"content":"Sequential当然是实现全连接网络的最好方式，但我们从简单的全连接网络开始，有助于我们学习这部分的内容。在开始前,有几个概念需要澄清: 层对象接受张量为参数,返回一个张量。 输入是张量，输出也是张量的一个框架就是一个模型，通过 Nodel定义。 这样的模型可以被像Keras的Sequential一样被训练 from keras.layers import Input. Dense from keras.models import Model # This returns a tensor inputs = Input(shape=(784,)) # a Layer instance is caLLabLe on a tensor~ and returns a tensor x = Dense(64, activation= 'relu')(inputs) x = Dense(64, activatlon= 'relu' )(x) predictions = Dense(10, activation= 'softmax' )(x) # This creates a modeL that incLudes # the Input Layer and three Dense Layer model = Model(inputs=inputs, outputs=predlctions) model.compile(optimizer= 'rmsprop', loss= 'categorical_crossentropy' , metrics=['accuracy']) model.fit(data. labels) # starts training ","date":"2020-12-20","objectID":"/kerasnote2/:1:0","tags":["keras","人工智能"],"title":"Keras","uri":"/kerasnote2/"},{"categories":["documentation"],"content":"所有的模型都是可调用的,就像层一样 利用函数式模型的接口，我们可以很容易的重用已经训练好的模型:你可以把模型当作一个层一样，通过提供一个tensor来调用它。注意当你调用一个模型时，你不仅仅重用了它的结构，也重用了它的权重。 x = Input(shape=(784,)) y = model(x) ","date":"2020-12-20","objectID":"/kerasnote2/:2:0","tags":["keras","人工智能"],"title":"Keras","uri":"/kerasnote2/"},{"categories":["documentation"],"content":"多输入和多输出模型 使用函数式模型的一个典型场景是搭建多输入、多输出的模型。 让我们用函数式模型来实现这个框图 import keras from keras.layers import Input, Embedding, LSTM, Dense from keras.models import Model main_input = Input(shape=(100,), dtype='int32', name='main_input') x = Embedding(output_dim=512, input_dim=10000, input_length=100)(main_input) lstm_out = LSTM(32)(x) auxiliary_output = Dense(1, activation='relu', name='auxiliary_output')(lstm_out) auxiliary_input = Input(shape=(5,), name='aux_input') x = keras.layers.concatenate([lstm_out, auxiliary_input]) x = Dense(64, activation='relu')(x) x = Dense(64, activation='relu')(x) x = Dense(64, activation='relu')(x) main_output = Dense(1, activation='sigmoid', name='main_output')(x) model = Model(inputs=[main_input, auxiliary_input], outputs=[main_output, auxiliary_output]) 模型定义完毕，下一步编译模型。我们给额外的损失赋0.2的权重。我们可以通过关键字参数loss_weights或 loss 来为不同的输出设置不同的损失函数或权值。这两个参数均可为Python的列表或字典。这里我们给loss传递单个损失函数，这个损失函数会被应用于所有输出上。 model.compile(optimizer='rmsprop',loss='binary_crossentropy',loss_weights=[1., 0.2]) model.fit([headline_data, additional_data], [labels, labels], epochs=50, batch_size=32) 因为我们输入和输出是被命名过的（在定义时传递了\"name”参数)，我们也可以用下面的方式编译和训练模型: model.compile(optimizer='rmsprop', loss={'main_output':'binary_crossentropy', 'aux_output':'binary_crossentropy'}, loss_weights={'main_output':1., 'aux_output':0.2}) model.fit({'main_input':headline_data, 'aux_input':additional_data}, {'main_output':labels, 'aux_output':labels}, epochs=50, batch_size=32) ","date":"2020-12-20","objectID":"/kerasnote2/:3:0","tags":["keras","人工智能"],"title":"Keras","uri":"/kerasnote2/"},{"categories":["documentation"],"content":"共享层 另一个使用函数式模型的场合是使用共享曾的时候。 import keras from keras.layers import Input, Dense, LSTM from keras.models import Model tweet_a = Input(shape=(140,256)) tweet_b = Input(shape=(140,256)) 若要对不同的输入共享同一层，就初始化该层一次，然后多次调用它 shared_lstm = LSTM(64) encoded_a = shared_lstm(tweet_a) encoded_b = shared_lstm(tweet_b) merged_vector = keras.layers.concatenate([encoded_a, encoded_b], axis=-1) predictions = Dense(1, activation='sigmoid')(merged_vector) model = Model(inputs=[tweet_a, tweet_b], outputs=predictions) model.compile(optimizer='rmsprop', loss='binary_crossentropy', metrics=['accuracy']) model.fit([data_a, data_b], predictions, epochs=10) ","date":"2020-12-20","objectID":"/kerasnote2/:4:0","tags":["keras","人工智能"],"title":"Keras","uri":"/kerasnote2/"},{"categories":["documentation"],"content":"层“节点”的概念 无论何时，当你在某个输入上调用时，你就创建了一个新的张量（即该层的输入），同时你也在为这个层增加一个“（计算）节点”。这个节点将输入张量映射为输出张量。当你多次调用该层时,这个层就有了多个节点,其下标分别为0，1，2… 如果层只与一个输入相连时，会出现问题 a = Input(shape=(140, 256)) b = Input(shape=(140, 256)) lstm = LSTM(32) encoded_a = lstm(a) encoded_b = lstm(b) lstm.output 上面这段代码会报错。 ","date":"2020-12-20","objectID":"/kerasnote2/:5:0","tags":["keras","人工智能"],"title":"Keras","uri":"/kerasnote2/"},{"categories":["documentation"],"content":"更多的例子 inception模型 from keras.layers import Conv2D, MaxPooling2D, Input from keras.models import Model input_img = Input(shape=(256,256,3)) tower_1 = Conv2D(64, (1,1), padding='same', activation='relu')(input_img) tower_1 = COnv2D(64, (3,3), padding='same', activation='relu')(tower_1) tower_2 = Conv2D(64, (1,1), padding='same', activation='relu')(input_img) tower_2 = Conv2D(64, (5,5), padding='same', activation='relu')(tower_2) tower_3 = MaxPooling2D((3,3), strides=(1,1), padding='same')(input_img) tower_3 = Conv2D(64, (1,1), padding='same', activation='relu')(tower_3) output = keras.layers.concatenate([tower_1, tower_2, tower_3], axis=-1) model = Model(input_img,output) model.summary() 上述代码执行结果： Model: \"model_1\" _________________________________________________________________ Layer (type) Output Shape Param # ================================================================= input_1 (InputLayer) (None, 32) 0 _________________________________________________________________ dense_1 (Dense) (None, 32) 1056 ================================================================= Total params: 1,056 Trainable params: 0 Non-trainable params: 1,056 _________________________________________________________________ 卷积层的残差连接 残差网络的详细信息参考文章Deep Residual Learning for Image Recognition from keras.layers import Conv2D, Input # input tensor for a 3-channel 256x256 image x = Input(shape=(256,256,3)) y = Conv2D(3, (3,3), padding='same')(x) z = keras.layers.add([x,y]) 共享视觉模型 该模型在两个输入上重用了图像处理的模型，用来判别两个MINIST数字是否是相同的数字 from keras.layers import Conv2D, MaxPooling2D, Input, Flatten from keras.models import Model # first, define the vision modules digit_input = Input(shape=(27,27,1)) x = Conv2D(64, (3,3))(digit_input) x = Conv2D(64, (3,3))(x) x = MaxPooling2D((2,2))(x) out = Flatten()(x) vision_model = Model(digit_input, out) digit_a = Input(shape=(27,27,1)) digit_b = Input(shape=(27,27,1)) out_a = vision_model(digit_a) out_b = vision_model(digit_b) concatenated = keras.layers.concatenate([out_a, out_b]) out = Dense(1, activation='sigmoid')(concatenated) classification_model = Model([digit_a, digit_b], out) ","date":"2020-12-20","objectID":"/kerasnote2/:6:0","tags":["keras","人工智能"],"title":"Keras","uri":"/kerasnote2/"},{"categories":["documentation"],"content":"关于Keraas模型 Keras有两种类型的模型，序贯模型（Sequential）和函数时模型（Model），函数式模型应用更为广泛，序贯模型时函数式模型的一种特殊情况。 两类模型有一些方法时相同的： model.summary()：打印出模型概况 model.get_config()：返回包含模型配置信息的Python字典。模型也可以从它的config信息中重构回去 config = model.get_config() model = Model.from_config(config) # or, for Sequential model = Sequential.from_config(config) model.get_layer()：依据层名或下标获得层对象 model.get_weights()：返回模型权重张量的列表，类型为numpy array model.set_weights()：从numpy array里将权重载入给模型，要求数组具有与model.get_weights()相同的形状 model.to_json()：返回代表模型的JSON字符串，仅包含网络结构，不包含权值。可以从JSON字符串中重构原模型： from models import model_from_json json_string = model.to_json() model = model_from_json(json_string) model.to_yaml()：与model.to_json()类似 model.save_weights(filepath)：将模型权重保持到指定的路径，文件类型时HDF5，后缀名是.h5 model.load_weights(filepath, by_name=False)：从HDF5文件中加载权重到当前模型中，默认情况下模型的结构不变。如果想将权重载入不同的模型（有些层相同），则设置by_name=True，只有名字匹配的层才开载入权重 ","date":"2020-12-20","objectID":"/kerasnote2/:7:0","tags":["keras","人工智能"],"title":"Keras","uri":"/kerasnote2/"},{"categories":["documentation"],"content":"keras学习笔记（三） ","date":"2020-12-20","objectID":"/imggenerator/:0:0","tags":["keras","人工智能"],"title":"图片预处理","uri":"/imggenerator/"},{"categories":["documentation"],"content":"图片生成器ImageDataGenerator keras.preprocessing.image.ImageDataGenerator(featurewise_center=False, samplewise_center=False, featurewise_std_normalization=False, samplewise_std_normalization=False, zca_whitening=False, rotation_range=0., width_shift_range=0., height_shift_range=0., shear_range=0., zoom_range=0., channel_shift_range=0., fill_mode='nearest', cval=0., horizontal_flip=False, vertical_flip=False, rescale=None, preprocessing_function=None, data_format=K.image_data_format()) 用以生成一个batch的图像数据，支持实时数据提升。训练时该函数会无限生成数据，直到达到规定的epoch次数为止。 ","date":"2020-12-20","objectID":"/imggenerator/:1:0","tags":["keras","人工智能"],"title":"图片预处理","uri":"/imggenerator/"},{"categories":["documentation"],"content":"参数 featurewise_center：布尔值，使数据集去中心化（均值为0），按feature执行 samplewise_center：布尔值，使输入数据的每个样本均值为0 featurewise_std_mormalization：布尔值，将输入除以数据集的标准差以完成标准化，按feature执行 samplewise_std_normalization：布尔值，将输入的每个样本除以其自身的标准差 zca_whitening：布尔值，对输入数据施加ZCA白化 rotation_range：证书，数据提升时图片随机转动的角度 width_shift_range：浮点数，图片宽度的某个比例，数据提升时图片水平偏移的幅度 height_shift_range：浮点数，图片高度的某个比例，数据提升时图片竖直偏移的幅度 shear_range：浮点数，剪切强度（逆时针方向的剪切变换角度） zoom_range：浮点数或形如[lower,upper]的列表，随机缩放的幅度，若为浮点数，则相当于[lower,upper] = [1 - zoom_range, 1 + zoom_range] channel_shift_range：附带念书，随即通道偏移的幅度 fill_mode：‘constant’, ‘nearest’, ‘reflect’或’wrap’之一，当进行变换时产出边界的点将根据本参数非定的方法进行处理 cval：浮点数或整数，当fill_mode=constant时，指定要向超出边界的点填充的值 horizontal_flip：布尔值，进行随机水平翻转 vertical_flip：布尔值，机型随机竖直翻转 rescale：重放缩因子，默认为None。如果为None或0则不进行缩放，否则或将该数值乘到数据上 preprocessing_function：将被应用于每个输入的函数。该函数将在任何其他修改之前运行。该函数接受一个参数，为一张图片（秩为3的numpy array），并且输出一个具有相同shape的numpy array data_format：字符串，“channel_first\"或\"channel_last\"之一，代表图像的通道维的位置。该参数是Keras 1.x中的image_dim_ordering，“channel_last\"对应原本的\"tf”，“channel_first\"对应原本的\"th”。以128x128的RGB图像为例，“channel_first\"应将数据组织为（3,128,128），而\"channel_last\"应将数据组织为（128,128,3）。该参数的默认值时~/.keras/keras.json中设置的值，若从未设置过，则为\"channel_last” ","date":"2020-12-20","objectID":"/imggenerator/:2:0","tags":["keras","人工智能"],"title":"图片预处理","uri":"/imggenerator/"},{"categories":["documentation"],"content":"方法 fit(x, augment=False, rounds=1)：计算依赖于数据的变换所需要要的统计信息（均值方差等），只有使用featurewise_center，featurewise_std_normalization或zca_whitening时需要此函数 x：numpy array，样本数据，秩应为4.在黑白图像的情况下channel轴的值为1，在彩色图像情况下值为3 augment：布尔值，确定是否使用随机提升过的数据 round：若设augment=True，确定要在数据上进行多少轮数据提升，默认值为1 seed：整数，随机数种子 flow(self,x,y,batch_size=32,shuffle=True,seed=None,save_to_dir=None,save_prefix=’',save_format='jpeg’)：接收numpy数组和标签为参数，生成过数据提升或标准化后的batch数据，并在一个无线循环中不断的返回batch数据 x：样本数据，秩为4，在黑白图像的情况下channel轴的值为1，在彩色图像情况下值为3 y：标签 batch_size：整数，默认32 shuffle：布尔值，是否随机打乱数据，默认为True save_to_dir：None或字符串，保存提升后图片时使用的前缀，仅当设置了save_to_dir时生效 save_format：“png”，“jpeg\"之一，指定保存图片的数据格式，默认\"jpeg” yields：形如（x,y）的tuple，x是代表图像数据的numpy数组，y是代表标签的numpy数组，该迭代器无限循环 seed：整数，随机数种子 flow_from_directory(directory)：以文件夹路径为i参数，生成经过数据提升/归一化后的数据，在一个无限循环中无限产生batch数据 directory：目标文件夹路径，对于每一个类，该文件夹都要包含一个子文件夹，子文件夹中任何jpg、png和bnp的图片都会被生成器使用 target_size：整数tuple，默认为（256，256）图像将被resize成该尺寸 color_model：颜色模式为\"grayscale”,“rgb\"之一，默认为\"rgb”，代表这些图片是否会被转换为单通道或三通图片 classes：可选参数，为子文件夹的列表，如[‘dogs’,‘cats’]默认为None，若未提供，则该类别列表将从direcoory下的子文件夹名称/结构自动推断。每一个子文件夹都会被认为是一个新的类（类别的顺序将按照字母表顺序映射到标签值）。通过属性class_indices可获得文件夹名与类的序号的对应字典 class_model：‘categorical’,‘binary’,‘sparses’,或None之一，默认为’categorical’,该参数决定了返回的标签数组的形式’categorical’会返回2D的one-hot编码标签 batch_size：batch数据的大小，默认32 shuffle：是否打乱数据，默认为True seed：可选参数，打乱数据和进行变换时的随机种子 save_to_dir：None或字符串，该参数能让你提升后的图片保存起来，用以可视化 save_prefix：字符串，保存提升后时使用的前缀，仅当设置了save_to_dir时生效 save_format：‘png’,‘jpeg’之一，指定保存图片的数据格式，默认’jpeg’ flollow_links：是否访问子文件夹的软连接 ","date":"2020-12-20","objectID":"/imggenerator/:3:0","tags":["keras","人工智能"],"title":"图片预处理","uri":"/imggenerator/"},{"categories":["documentation"],"content":"例子 使用.flow()的例子 (X_train, y_train), (X_test, y_test) = cifar10.load_data() Y_train = np_utils.to_categorical(y_train, nb_classes) Y_test = np_utils.to_categorical(y_test, nb_classes) datagen = ImageDataGenerator(featurewise_center=True, featurewise_std_normalization=True, rotation_range=20, width_shift_range=0.2, height_shift_range=0.2, horizon_flip=True) datagen.fit(X_train) model.fit_generator(datagen.flow(X_train, Y_train, batch_size=32), samples_per_eopch=len(X_train),nb_epoch=nb_epoch) for e in range(nb_epoch): print('Epoch',e) batches = 0 for X_batch, Y_batch, in datagen.flow(X_train, Y_train, batch_size=32): loss = model.train(X_batch, Y_batch) batches += 1 if batches \u003e= len(X_train)/32: break 使用.flow_from_directory(directory)的例子 train_datagen = ImageDataGenerator( rescale=1./255, shear_range=0.2, zoom_range=0.2, horizontal_flip=True) test_datagen = ImageDataGenerator(rescale=1./255) train_generator = train_datagen.flow_from_directory( 'data/train', target_size=(150, 150), batch_size=32, class_mode='binary') validation_generator = test_datagen.flow_from_directory( 'data/validation', target_size=(150, 150), batch_size=32, class_mode='binary') model.fit_generator( train_generator, samples_per_epoch=2000, nb_epoch=50, validation_data=validation_generator, nb_val_samples=800) ","date":"2020-12-20","objectID":"/imggenerator/:4:0","tags":["keras","人工智能"],"title":"图片预处理","uri":"/imggenerator/"},{"categories":["documentation"],"content":"keras学习笔记（四） 目标函数，或称损失函数，是编译一个模型必须的两个参数之一： model.compile(loss='mean_squared_error', optimizer='sgd') 可以通过传递预定义目标函数名字指定目标函数，也可以传递一个Tensorflow的符号函数作为目标函数，该函数对每个数据点应该只返回一个标量值，并以下列两个参数为参数： y_true：真实的数据标签，Tensorflow张量 y_pred：预测值，与y_true相同shape的Tensorflow张量 真实的优化目标函数实在各个数据点得到的损失函数值之和的均值 ","date":"2020-12-20","objectID":"/lossfunction/:0:0","tags":["keras","lossFunction"],"title":"损失函数","uri":"/lossfunction/"},{"categories":["documentation"],"content":"自定义损失函数例子 原文链接：https://kexue.fm/archives/4493 from keras.layers import Input,Embedding,LSTM,Dense from keras.models import Model from keras import backend as K word_size = 128 nb_features = 10000 nb_classes = 10 encode_size = 64 input = Input(shape=(None,)) embedded = Embedding(nb_features,word_size)(input) encoder = LSTM(encode_size)(embedded) predict = Dense(nb_classes, activation='softmax')(encoder) def mycrossentropy(y_true, y_pred, e=0.1): loss1 = K.categorical_crossentropy(y_true, y_pred) loss2 = K.categorical_crossentropy(K.ones_like(y_pred)/nb_classes, y_pred) return (1-e)*loss1 + e*loss2 model = Model(inputs=input, outputs=predict) model.compile(optimizer='adam', loss=mycrossentropy) ","date":"2020-12-20","objectID":"/lossfunction/:1:0","tags":["keras","lossFunction"],"title":"损失函数","uri":"/lossfunction/"},{"categories":["documentation"],"content":"keras学习笔记（一） ","date":"2020-12-19","objectID":"/kerasnote1/:0:0","tags":["keras","人工智能"],"title":"Keras","uri":"/kerasnote1/"},{"categories":["documentation"],"content":"1.Sequential 传递一个input_shape的关键字参数给第一层，input_shape是一个tuple类型的数据 编译：在模型训练前我们需要通过compile来对学习过程进行配置。compile接受三个参数： 优化器optimizer：如rmsprop、adagrad，或一个Optimizer类的对象，详情见optimizer 损失函数loss：该参数为模型视图最小化的目标函数，它可以为预定义的损失函数名，如categorical_crossentropy、mse，也可以为一个损失函数，详情见losses 指标列表metrics：对分类问题，一般将该列表设置为metrics[\"accuracy\"]。指标可以是一个预定义指标的名字，也可以是一个用户定制的函数。指标函数应该返回单个张量，或一个完成metric_mane -\u003e metric_value映射的字典，请参考性能评估。 # for a multi-class calssfication problem model.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics=['accuracy']) # for a binary classfication problem model.compile(optimizer='rmsprop', loss='binary_crossentropy', metrics=['accuracy']) # for a mean squared error regression problem model.compile(optimizer='rmsprop', loss='mse') # For custom metrics import keras.backend as K def mean_pred(y_true, y_pred): return K.mean(y_pred) model.compile(optimizer='rmsprop', loss='binary_crossentropy', metrics=['accuracy',mean_pred]) 训练： Keras以Numpy数组作为输入数据和标签的数据类型。训练模型一般使用fit函数，下面是一些例子 # for a single-input model with 2 classes (binary classification): model = Sequential() model.add(Dense(32,activation='relu',input_dim=100)) model.add(Dense(1,activation='sigmod')) model.compile(optimizer='rmsprop', loss='binary_crossentropy', metrics=['accuracy']) # Generate numpy data import numpy as np data = np.random.random((1000,100)) labels = np.random.randint(2, size=(1000, 1)) # Train the model, iterating on the data in batches of 32 samples model.fit(data, labels, epochs=10, batch_size=32) # for a single-input model with 10 classes (categorical classification): model = Sequential() model.add(Dense(32, activation='relu', input_dim=100)) model.add(Dense(10, activation='softmax')) model.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics=['accuracy']) # Generate numpy data import numpy as np data = np.random.random((1000,100)) labels = np.random.randint(10, size=(1000, 1)) one_hot_labels = keras.utils.to_categorical(labels, num_classes=10) model.fit(data, one_hot_labels, epochs=10, batch_size=32) 基于多层感知器的softmax多分类： from keras.models import Sequential from keras.layers import Dense, Dropout, Activation from keras.optimizers import SGD #Generate numpy data import numpy as np x_train = np.random.random((1000,20)) y_train = keras.utils.to_categorical(np.ramdom.randint(10, size=(1000, 1)), num_classes=10) x_test = np.random.random((100, 20)) y_test = keras.utils.to_categorical(np.ramdom.randint(10, size=(100, 1)), num_classes=10) model = Sequential() model.add(Dense(64, activation='relu', input_dim = 20)) model.add(Dropout(0.5)) model.add(Dense(64, activation='relu')) model.add(Dropout(0.5)) model.add(Dense(10, activation='softmax')) sgd = SGD(lr=0.01, decay=1e-6, momentum=0.9, nesterov=True) model.compile(optimizer=sgd, loss='categorical_crossentropy', metrics=['accuracy']) model.fit(x_train, y_train, epochs=50, batch_size=128) score = model.evaluate(x_test, y_test, batch_size=128) MLP的二分类： import numpy as np from keras.layers import Dense, Dropout from keras.models import Sequential #Generate numpy data x_train = np.random.random((1000, 20)) y_train = np.random.randint(2, size=(1000,1)) x_test = np.random.random((100, 20)) y_test = np.random.randint(2, size=(100, 1)) model = Sequential() model.add(Dense(64, activation='relu', input_dim=20)) model.add(Dropout(0.5)) model.add(Dense(64, activation='relu')) model.add(Dropout(0.5)) model.add(Dense(1, activation='sigmoid')) model.compile(loss='binary_crossentropy', optimizer='rmsprop', metrics=['accuracy']) model.fit(x_train,y_train, epochs = 20, batch_size=128) loss, accuracy = model.evaluate(x_test, y_test) print(loss, accuracy) 类似VGG的卷积神经网络： import numpy as np from keras.layers import Dense, Flatten from keras.models import Sequential from kreas.layers import Conv2D, MaxPooling2D from keras.optimizers import SGD # Generate numpy data x_train = np.random.random(size=(100, 100, 100, 3)) y_train = np.random.randint(10, size=(100, 1)) y_train = keras.utils.to_categorical(y_train, num_","date":"2020-12-19","objectID":"/kerasnote1/:1:0","tags":["keras","人工智能"],"title":"Keras","uri":"/kerasnote1/"},{"categories":["life\""],"content":"感谢曾经那些在我成长过程中给我提供过帮助的人 Me\r\rWhat I hope is to get timely help from my friends when I need.\r\r Tiredimage-20201218235335106 \"\rTired\r 最近想了好多事情：放弃一些东西，有时候感觉自己做的一些东西其实用处不大；有时候和其他人说话会有一种热脸贴冷屁股的感觉；有时候你热心地帮助他人，为他人解决麻烦，但是自己得到的仅仅是他人的一句谢谢or什么都没有。我曾经付出了一定的时间和精力去帮助他人，等我自己需要帮忙了，我所想要的仅仅是自己曾经帮助过的他人能够及时提供帮助，而不是推~推~推，屎壳郎推粪球呢！解决不了根本问题，等到我的事情结束了，你跑过来解释，有什么用呢？ 有时候感觉自己对待他人过于热情了，很大成度上是因为自己的性格吧，有时候我会尝试着改变自己的性格（某些方面）：对于别人问的一些问题，就算自己可以帮还是尽量拒绝吧，因为还是那句话，为他人解决问题，得到的微乎其微。请我帮忙的人熟悉我的话是不会给你一份钱的，因为他们认为你帮他们理所应当，所以还是少帮吧。换一个角度，这样既是节约自己的时间，别人自己锻炼且得到了解决问题的能力，从长远来看，何乐而不为呢？ 人都是自私自利的，包括我在内。当你免费给他人提供一些服务的时候，在别人眼中可能什么也不是，可是你自己付出了很大的代价，当你不再提供的时候他们可能就觉得是你的不对了！所以减少对别人的热情帮助，在属于自己的时间内学好自己的东西，减少他人对我的打扰，等到实在是有足够强大的能力的话再去帮别人，当下就是先做好自己！ No one will care about you, because you have no value to others to care about and you are nothing. The articles you write are used to wake yourself up not to be like before. ","date":"2020-12-18","objectID":"/thoughts/:0:0","tags":["感想"],"title":"感想","uri":"/thoughts/"},{"categories":["life","大学"],"content":"工程实训相关 ","date":"2020-11-20","objectID":"/gcsx/:0:0","tags":["大学","工程实训"],"title":"工程实训","uri":"/gcsx/"},{"categories":["life","大学"],"content":"1.⚠️要求！敲黑板！！！ 必须穿军训服装 女同学要将头发盘起来，戴帽子（帽子不限款式） 没有特别特别重要的事情不要请假，请假后续会很麻烦（成绩可能会不及格） 最好有书本金工实训，小组之内要有 工训时带上工程实训报告（一）、工程实训记录、总结、课程评价本 Tip\r\r实训最后一天二班安排评教和理论考试，具体时间提前一天通知组长。\r\r ","date":"2020-11-20","objectID":"/gcsx/:1:0","tags":["大学","工程实训"],"title":"工程实训","uri":"/gcsx/"},{"categories":["life","大学"],"content":"2.📃作息安排 注意\r\r吃饭时间：11:00-11:30\r\r 具体请看下图： 第一部分Part1 \"\r第一部分\r 第二部分Part2 \"\r第二部分\r 整体部分All \"\r整体部分\r 金工实训书本jgsx \"\r金工实训书本\r 小册子books \"\r小册子\r ","date":"2020-11-20","objectID":"/gcsx/:2:0","tags":["大学","工程实训"],"title":"工程实训","uri":"/gcsx/"},{"categories":["life","大学"],"content":"3.🌏工程实训中心 ","date":"2020-11-20","objectID":"/gcsx/:3:0","tags":["大学","工程实训"],"title":"工程实训","uri":"/gcsx/"},{"categories":["大学"],"content":"大学英语CET6考试相关 愿：所行化坦途，所求皆如愿。🙂 忠心的祝愿你能取得优异的成绩，如愿以偿，金榜题名。😃 因为你付出了好多，也吃了不少的苦，受了不少的累，天道酬勤，相信自己，我们一定能成功！😉 ","date":"2020-11-12","objectID":"/cet6/:0:0","tags":["cet6","英语","笔记"],"title":"大学英语六级考试","uri":"/cet6/"},{"categories":["大学"],"content":"1.官方网站 详细信息请点击官网进行了解全国大学英语四、六级考试(CET)官方网站 官方网站image-20201112084721430 \"\r官方网站\r ","date":"2020-11-12","objectID":"/cet6/:1:0","tags":["cet6","英语","笔记"],"title":"大学英语六级考试","uri":"/cet6/"},{"categories":["大学"],"content":"2.准考证 快速打印准考证 快速打印准考证image-20201112084447132 \"\r快速打印准考证\r ","date":"2020-11-12","objectID":"/cet6/:2:0","tags":["cet6","英语","笔记"],"title":"大学英语六级考试","uri":"/cet6/"},{"categories":["大学"],"content":"3.考试流程 ","date":"2020-11-12","objectID":"/cet6/:3:0","tags":["cet6","英语","笔记"],"title":"大学英语六级考试","uri":"/cet6/"},{"categories":["大学"],"content":"4.时间安排 注意\r\r笔试考试时间12月12日 下午15:00-17:25\r\r \r\r试卷结构 \r测试内容 \r测试题型 \r题目数量 \r分值比例 \r考试时间 \r\r\r写作 \r写作 \r短文写作 \r1 \r15% \r30分钟 \r\r\r听力理解 \r长对话 \r选择题（单选题） \r8 \r8% \r30分钟 \r\r\r听力篇章 \r选择题（单选题） \r7 \r7% \r\r\r讲话/报道/讲座 \r选择题（单选题） \r10 \r20% \r\r\r阅读理解 \r词汇理解 \r选词填空 \r10 \r5% \r40分钟 \r\r\r长篇阅读 \r匹配 \r10 \r10% \r\r\r仔细阅读 \r选择题（选择题） \r10 \r20% \r\r\r翻译 \r \r段落翻译 \r1 \r15% \r30分钟 \r\r\r总计 \r57 \r100% \r130分钟 \r\r\r\r","date":"2020-11-12","objectID":"/cet6/:4:0","tags":["cet6","英语","笔记"],"title":"大学英语六级考试","uri":"/cet6/"},{"categories":["大学"],"content":"5.结语 最后的最后送上一张壁纸吧 :-) Wallpaper84ca50b5a018ac30a4a462fce08df714 \"\rWallpaper\r 听说能看到最后的小伙伴英语六级考试都能通过哦🙃 ","date":"2020-11-12","objectID":"/cet6/:5:0","tags":["cet6","英语","笔记"],"title":"大学英语六级考试","uri":"/cet6/"},{"categories":["life","大学"],"content":"英语演讲稿 Hello everyone. I am Bao Ruofei from Class 191 of Excellence in Agricultural Electrification. The main topic of my speech is Artificial Intelligence in my eyes. Artificial Intelligence is one of the three cutting-edge technologies in the 21st century. It has played an irreplaceable role in social production and life. It researches and develops theories, methods, technologies and applications for simulating, extending and expanding human intelligence system. As a branch of computer science, it attempts to understand the essence of intelligence and produce a new intelligent machine that can react in a similar way to human intelligence. It is the science of studying how to create intelligent machines or intelligent systems to simulate the ability of human intelligence activities to extend people’s intelligence. In my opinion, artificial intelligence can be understood in two parts, namely “artificial” and “intelligence”. Artificial, naturally, is something that humans can do, and humans complete activities. Intelligence should be understood as wisdom and ability. The essence of artificial intelligence is the process of machine self-learning. Machine learning includes two major modules: one is the data source, which is big data; the other is the data processing method, which is the machine learning algorithm. Once artificial intelligence is completed, it will have a huge subversion of the existing mobile Internet product business model, and even some of them will no longer exist. Its arrival will change the existing shopping, chat and communication methods, and even have an impact on social interaction. Due to technical bottlenecks, artificial intelligence is far from reaching the point of maturity. Artificial intelligence based on big data analysis and processing can achieve accurate recommendations. However, there is a big bottleneck in using it to simulate humans. That is, it cannot simulate human characteristics such as emotions and morals. So we don’t have to worry that artificial intelligence will rule humanity now. I believe it will eventually develop within the controllable range of mankind and benefit us in the future. First1 \"\rFirst\r Second2 \"\rSecond\r Third3 \"\rThird\r ","date":"2020-11-10","objectID":"/englishspeech/:0:0","tags":["大学","生活"],"title":"没人比我更懂演讲","uri":"/englishspeech/"},{"categories":["documentation"],"content":"知识-笔记 ","date":"2020-11-09","objectID":"/pipsource/:0:0","tags":["笔记","知识"],"title":"pip换源","uri":"/pipsource/"},{"categories":["documentation"],"content":"1.国内源： 清华：https://pypi.tuna.tsinghua.edu.cn/simple 阿里云：https://mirrors.aliyun.com/pypi/simple/ 中国科技大学：https://pypi.mirrors.ustc.edu.cn/simple/ 华中理工大学：https://pypi.hustunique.com/ 山东理工大学：https://pypi.sdutlinux.org/ 豆瓣：https://pypi.douban.com/simple/ 注意\r\r新版ubuntu要求使用https源，要注意。\r\r ","date":"2020-11-09","objectID":"/pipsource/:1:0","tags":["笔记","知识"],"title":"pip换源","uri":"/pipsource/"},{"categories":["documentation"],"content":"2.临时使用 可以在使用pip的时候加参数-i https://pypi.tuna.tsinghua.edu.cn/simple 例如：pip install -i https://mirrors.aliyun.com/pypi/simple/ tensorflow，这样就会从阿里云这边去安装库。 ","date":"2020-11-09","objectID":"/pipsource/:2:0","tags":["笔记","知识"],"title":"pip换源","uri":"/pipsource/"},{"categories":["documentation"],"content":"3.永久使用 在Linux下, 修改 ~/.pip/pip.conf (没有就创建一个文件夹及文件。文件夹要加“.”，表示是隐藏文件夹) 内容如下： [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple [install] trusted-host=mirrors.aliyun.com windows下，直接在user目录中创建一个pip目录，再新建文件pip.ini。（例如：C:\\Users\\Administrator\\pip\\pip.ini）内容同上。 ","date":"2020-11-09","objectID":"/pipsource/:3:0","tags":["笔记","知识"],"title":"pip换源","uri":"/pipsource/"},{"categories":["documentation"],"content":"笔记-科研 ","date":"2020-11-09","objectID":"/ml1/:0:0","tags":["笔记","知识"],"title":"机器学习知识总结","uri":"/ml1/"},{"categories":["documentation"],"content":"1.Softmax 实际神经网络最后的输出层的类别是没有意义的，是给出的标签赋予了其意义，softmax之前的分类每一个类都有一个数值，训练过程中经过softmax后将其转化位概率，挑选出最大的概率与正确的标签比较，从而进行神经网络训练，在实战测试中继续给出预测的概率，onehot后给出类别 ","date":"2020-11-09","objectID":"/ml1/:1:0","tags":["笔记","知识"],"title":"机器学习知识总结","uri":"/ml1/"},{"categories":["documentation"],"content":"2.Dropout 随机断开神经网络连接，减少每次训练时实际参与计算的模型的参数量，但是在模型实战测试时，Dropout会恢复所有的连接，保证模型测试时获得最好的性能。 DropoutDropout \"\rDropout\r DropoutInfoDropout \"\rDropoutInfo\r DropoutImgDropout \"\rDropoutImg\r ","date":"2020-11-09","objectID":"/ml1/:2:0","tags":["笔记","知识"],"title":"机器学习知识总结","uri":"/ml1/"},{"categories":["documentation"],"content":"3.BatchNorm层 简单来说就是将输入的数据进行映射，使得数据分布相近，并且分布在较小范围内 BNBN \"\rBN\r ","date":"2020-11-09","objectID":"/ml1/:3:0","tags":["笔记","知识"],"title":"机器学习知识总结","uri":"/ml1/"},{"categories":["life","大学"],"content":"致新生-科研 ","date":"2020-10-02","objectID":"/foryou/:0:0","tags":["大学","生活"],"title":"致那些对科研热爱的学弟学妹","uri":"/foryou/"},{"categories":["life","大学"],"content":"说在前面 \r\r\r提示\r\r声明一下：以下内容仅我个人看法，仅供参考。\r\r ","date":"2020-10-02","objectID":"/foryou/:1:0","tags":["大学","生活"],"title":"致那些对科研热爱的学弟学妹","uri":"/foryou/"},{"categories":["life","大学"],"content":"1.社团🎖️\u0026卓越班🏆 ","date":"2020-10-02","objectID":"/foryou/:2:0","tags":["大学","生活"],"title":"致那些对科研热爱的学弟学妹","uri":"/foryou/"},{"categories":["life","大学"],"content":"1.1 社团相关🎖️ 大学中社团在我看来是一个神秘的组织有好多的社团你都可以参加，比如什么青协、科创等。参加的多少是你自己的事情。我说一下我对社团的看法。 每参加一个社团都需要缴钱，大概就是参加一个社团要缴40元左右 参加的越多你为每一个社团付出的时间也越多 想好好学一门技能的话就参加一个技术社团比如什么科创的，想要学到东西必须有所付出 ","date":"2020-10-02","objectID":"/foryou/:2:1","tags":["大学","生活"],"title":"致那些对科研热爱的学弟学妹","uri":"/foryou/"},{"categories":["life","大学"],"content":"1.2 分班问题🏆 我目前是大二，对大学生活了解的也不算多，准确来说也就比你们多半年的大学生活，以下是我对卓越与非卓越的看法： 卓越班级是一个平台，在这个班级里面相对来说都是一些又经过选拔的相对高水平的一些人，可以增加一下你的人脉吧。 卓越班与非卓越班的课程安排会有所不同，卓越班重点往研究生培养，非卓越班的话可能更多往就业方面考虑。 卓越班的课程安排相对来说要难一点，要付出的可能要相对多一点。 无论是否在卓越班，最重要的是你自己的努力程度，卓越班与非卓越班的课程，只要你想学好，那么都是不容易的，且要付出代价的。 ","date":"2020-10-02","objectID":"/foryou/:2:2","tags":["大学","生活"],"title":"致那些对科研热爱的学弟学妹","uri":"/foryou/"},{"categories":["life","大学"],"content":"2.学习相关👩‍🎓 Study学习 \"\rStudy\r 大学里的学习，可以说是全部都是自己学的，为自己学的。想要学习好，就需要课上认真听讲，做好笔记，课下努力学习；要想称为大佬，就需要在别人放松的时候自己研究自己的感兴趣的东西，你所看到那些大佬都是自己努力学习的结果。要想自己掌握一些技术，就必定要自己做出一些付出，不要指望其他人，其他人也就顶多给你引路，你的路还是要脚踏实地自己走下去的，不要担心自己学不会，应该担心自己有没有毅力坚持下去！ 只要你能努力学习，劳逸结合就不要担心学不会！ ","date":"2020-10-02","objectID":"/foryou/:3:0","tags":["大学","生活"],"title":"致那些对科研热爱的学弟学妹","uri":"/foryou/"},{"categories":["life","大学"],"content":"3.我想加入团队需要做些什么？🤔 AbilityAbility \"\rAbility\r 你需要有自己解决问题的能力，当你遇到一个问题的时候，你的解决问题的能力很重要，不要上来就问别人，先自己思考，解决不了的话就利用好搜索引擎，最好用必应，谷歌什么的。如果搜遍全网后还是没有解决，要么就是你自己的能力还达不到你要解决问题的水平，或者你的问题确实是个新的问题，这时候你就可以向其他人请教，真要是达到这个地步了，估计其他人也很难解决，除非是真正的大佬。 👨‍🎓目前因为你们都什么都没有学，所以你们主要还是先搞好自己的课程，大学里不要挂科，不然会很麻烦的，且到时候还要补考，补考没有通过的话就需要重修，到时候那可是很拖后腿的！ ProgramProgram \"\rProgram\r 如果还没有过编程语言的话可以先自己试着学习一些C语言或者python语言，等到你理解了编程语言的整体框架后差不多就可以自己写一些好玩的东西了比如用python做一个qq机器人什么的，你们可以多了解一些东西，知道什么东西可以做些什么，可以先不学，等到要用到的时候再学，然后学以致用。 我认为学习编程不需要有很高的IQ只要你想学，知道基本语法后就可以在法律范围内自由发挥自己的想象力，做出任何你想做的东西。 最后想说一句： 提示\r\r对自己充满信心，相信自己只要努力，什么都可以学会！都可以学好！\r\r","date":"2020-10-02","objectID":"/foryou/:4:0","tags":["大学","生活"],"title":"致那些对科研热爱的学弟学妹","uri":"/foryou/"},{"categories":["树莓派"],"content":"简单使用教程 主要有三个阶段： 树莓派与手机或者电脑在同WiFi下 连接树莓派 执行树莓派上面的代码 手机或者电脑接收视频画面 ","date":"2020-09-26","objectID":"/operationmethod/:0:0","tags":["Raspberry","控制"],"title":"获取树莓派摄像头画面","uri":"/operationmethod/"},{"categories":["树莓派"],"content":"1.树莓派连接WiFi 通过键盘和鼠标，控制树莓派从而连接WiFi，连接成功之后记住树莓派的ip地址(我这里是 192.168.0.123)，后面要用到，然后手机也连接同一个WiFi ","date":"2020-09-26","objectID":"/operationmethod/:1:0","tags":["Raspberry","控制"],"title":"获取树莓派摄像头画面","uri":"/operationmethod/"},{"categories":["树莓派"],"content":"2.设备连接树莓派 手机或者电脑控制树莓派有两种方法。设备与树莓派连接前提是要在同一个WiFi下，且要知道树莓派的IP地址 ","date":"2020-09-26","objectID":"/operationmethod/:2:0","tags":["Raspberry","控制"],"title":"获取树莓派摄像头画面","uri":"/operationmethod/"},{"categories":["树莓派"],"content":"2.1 ssh连接 #手机或者电脑在终端输入下面的命令 这里树莓派的ip地址是192.168.0.123 ssh pi@192.168.0.123 #第一次连接可能会让你输入yes或者no 输入yes然后回车就行 #然后就会让你输入密码。 密码是2053 pi@raspberrypi:~ $ #出现这个就说明连接成功了 电脑连接树莓派电脑连接树莓派 \"\r电脑连接树莓派\r 2.1.1然后执行命令： bash /home/pi/Desktop/start.sh 2.1.2出现下面这个就说明代码执行成功 ssh操作ssh操作 \"\rssh操作\r ","date":"2020-09-26","objectID":"/operationmethod/:2:1","tags":["Raspberry","控制"],"title":"获取树莓派摄像头画面","uri":"/operationmethod/"},{"categories":["树莓派"],"content":"2.2 VNC连接 2.2.1 手机上或者电脑上安装vnc客户端 将树莓派的IP地址填写在如下图的地址栏，然后回车。连接需要输入用户名和密码 #用户名:pi #密码:2053 电脑vnc电脑vnc \"\r电脑vnc\r 2.2.2 连接成功后的界面 vncvnc \"\rvnc\r 之后你就可以通过鼠标或者键盘操作树莓派了 2.2.3打开桌面上web_Python文件夹 如下图： 操作操作 \"\r操作\r 2.2.4出现下面这种情况就说明代码执行成功 vnc successvnc success \"\rvnc success\r ","date":"2020-09-26","objectID":"/operationmethod/:2:2","tags":["Raspberry","控制"],"title":"获取树莓派摄像头画面","uri":"/operationmethod/"},{"categories":["树莓派"],"content":"3.图像获取 确保是手机或者电脑与树莓派在同一个wifi下 ","date":"2020-09-26","objectID":"/operationmethod/:3:0","tags":["Raspberry","控制"],"title":"获取树莓派摄像头画面","uri":"/operationmethod/"},{"categories":["树莓派"],"content":"3.1获取视频流 http://192.168.0.123:8080/?action=stream streamstream \"\rstream\r ","date":"2020-09-26","objectID":"/operationmethod/:3:1","tags":["Raspberry","控制"],"title":"获取树莓派摄像头画面","uri":"/operationmethod/"},{"categories":["树莓派"],"content":"3.2 控制+视频 在电脑浏览器地址栏输入下面的网址： http://192.168.0.123:8001/ control\u0026videocontrol\u0026amp;video \"\rcontrol\u0026video\r ","date":"2020-09-26","objectID":"/operationmethod/:3:2","tags":["Raspberry","控制"],"title":"获取树莓派摄像头画面","uri":"/operationmethod/"},{"categories":["树莓派"],"content":"3.3 获取图片 在电脑浏览器地址栏输入下面的网址： http://192.168.0.123:8080/?action=snapshot picpic \"\rpic\r ","date":"2020-09-26","objectID":"/operationmethod/:3:3","tags":["Raspberry","控制"],"title":"获取树莓派摄像头画面","uri":"/operationmethod/"},{"categories":["树莓派"],"content":"3.4更多控制参数 http://192.168.0.123:8080/java.html detaildetail \"\rdetail\r ","date":"2020-09-26","objectID":"/operationmethod/:3:4","tags":["Raspberry","控制"],"title":"获取树莓派摄像头画面","uri":"/operationmethod/"},{"categories":["life","朋友"],"content":"For a friend. 看到了我所在的专业的转专业人员名单后心里有一点小小的难受，怎么说呢，心里有一点不舍。鉴于一些自己的环境和自己的情况，就没有申请转专业。 现在看到他将要离开了，心里还是有一点不舍的，毕竟有了一年了，还是有点感情的。 Tip\r\r希望他在新的学院能够快速适应所在专业的环境，学习方面能够跟得上进度，自己的能力能够有所重大提高。\r\r \r现在心里想对他说的一句话就是： 到了新的专业，要努力学习，不要等到再见面的时候让我瞧不起你！！！ ","date":"2020-09-25","objectID":"/friendwillgone/:0:0","tags":["大学","朋友"],"title":"一位即将离开的朋友","uri":"/friendwillgone/"},{"categories":["life","大学"],"content":"关于这两天发生的事情 \r 做一个负责人的人，对于自己的事情要认真负责地完成 一个团队里面不要有浑水摸鱼的人，不然很多事情都会做不好的。 ","date":"2020-09-25","objectID":"/lifethink/:0:0","tags":["大学","生活"],"title":"烦心事","uri":"/lifethink/"},{"categories":["life","大学"],"content":"希望自己在新的学期能够有所改变 \r1.性格 ","date":"2020-09-25","objectID":"/wish/:0:0","tags":["大学","生活"],"title":"致自己-改变","uri":"/wish/"},{"categories":["life","大学"],"content":"1.1学会拒绝 ","date":"2020-09-25","objectID":"/wish/:1:0","tags":["大学","生活"],"title":"致自己-改变","uri":"/wish/"},{"categories":["life","大学"],"content":"1.2性格开朗 ","date":"2020-09-25","objectID":"/wish/:2:0","tags":["大学","生活"],"title":"致自己-改变","uri":"/wish/"},{"categories":["life","大学"],"content":"1.3多与她人交流 ","date":"2020-09-25","objectID":"/wish/:3:0","tags":["大学","生活"],"title":"致自己-改变","uri":"/wish/"},{"categories":["life","大学"],"content":"1.4敢于面对失败 2.能力 ","date":"2020-09-25","objectID":"/wish/:4:0","tags":["大学","生活"],"title":"致自己-改变","uri":"/wish/"},{"categories":["life","大学"],"content":"2.1学习大学课程 ","date":"2020-09-25","objectID":"/wish/:5:0","tags":["大学","生活"],"title":"致自己-改变","uri":"/wish/"},{"categories":["life","大学"],"content":"2.2学习技术 ","date":"2020-09-25","objectID":"/wish/:6:0","tags":["大学","生活"],"title":"致自己-改变","uri":"/wish/"},{"categories":["life","大学"],"content":"2.3学习人际交流能力 ","date":"2020-09-25","objectID":"/wish/:7:0","tags":["大学","生活"],"title":"致自己-改变","uri":"/wish/"},{"categories":["life","大学"],"content":"2.4拥有更多追求 Tip\r\r要想变得强大，就需要耐得住寂寞，可能没有陪伴，可能心里有苦没人倾诉，可能…\r\r ","date":"2020-09-25","objectID":"/wish/:8:0","tags":["大学","生活"],"title":"致自己-改变","uri":"/wish/"},{"categories":["life"],"content":"生活感想-努力 提示\r\r有时候累了，就暂停一下，休息休息，听听喜欢的歌，然后继续努力！\r\r SnowSnow \"\rSnow\r GalaxyStar \"\rGalaxy\r ","date":"2020-09-08","objectID":"/rest/:0:0","tags":["努力"],"title":"努力","uri":"/rest/"},{"categories":["life"],"content":"教你如何用英文不带脏字地优雅回怼！ ","date":"2020-09-03","objectID":"/fuckidiotforeigner/:0:0","tags":["歪果仁","生活"],"title":"用英语怼无脑人","uri":"/fuckidiotforeigner/"},{"categories":["life"],"content":"1.别人骂你丑 Question\r\rOh,you’re so ugly. 你也太丑了吧 \r\r Answer\r\rI would be if I were a mirror. 除非我是面镜子 \r\r ","date":"2020-09-03","objectID":"/fuckidiotforeigner/:1:0","tags":["歪果仁","生活"],"title":"用英语怼无脑人","uri":"/fuckidiotforeigner/"},{"categories":["life"],"content":"2.化妆人骂你 Question\r\r:#%\u0026?#$?\r\r Answer\r\rMaybe you should eat the makeup too so you’ll be pretty inside. 你的化妆品应该用来吃说不定可以美化你的内心 \r\r ","date":"2020-09-03","objectID":"/fuckidiotforeigner/:2:0","tags":["歪果仁","生活"],"title":"用英语怼无脑人","uri":"/fuckidiotforeigner/"},{"categories":["life"],"content":"3.有人对你说蠢话 Question\r\rIf we have more cars in the world then people can work less. 要是世界上有更多的车大家就可以少走一点路了 \r\r Answer\r\rIf you donate your brain to sience they’ll return it. 你这脑子捐出去科研都会被退回来 \r\r ","date":"2020-09-03","objectID":"/fuckidiotforeigner/:3:0","tags":["歪果仁","生活"],"title":"用英语怼无脑人","uri":"/fuckidiotforeigner/"},{"categories":["life"],"content":"4.一个人表现很无脑 Question\r\rPeople work at the radio because they’re ugly. 人们在电台工作是因为长得丑 \r\r Answer\r\rYour ignorance surpassed my expectations. 你的无知超乎想象 \r\r ","date":"2020-09-03","objectID":"/fuckidiotforeigner/:4:0","tags":["歪果仁","生活"],"title":"用英语怼无脑人","uri":"/fuckidiotforeigner/"},{"categories":["life"],"content":"5.一个人很奇葩 Question\r\rOh you’re Chinese you must be good at Kung Fu. 你是中国人功夫一定很好吧 \r\r Answer\r\rI envy people who haven’t met you. 我嫉妒那些还没有遇见你的人 \r\r ","date":"2020-09-03","objectID":"/fuckidiotforeigner/:5:0","tags":["歪果仁","生活"],"title":"用英语怼无脑人","uri":"/fuckidiotforeigner/"},{"categories":["life"],"content":"6.一个人气到你无语 Question\r\rOh my god everyone is so stupid except me. 我的天啊，大家都好蠢除了我 \r\r Answer\r\rIf you’re on fire and I have water,I would drink it. 你要是着火了，我有水都宁愿喝掉。 \r\r ","date":"2020-09-03","objectID":"/fuckidiotforeigner/:6:0","tags":["歪果仁","生活"],"title":"用英语怼无脑人","uri":"/fuckidiotforeigner/"},{"categories":["life"],"content":"7.简单骂人 ","date":"2020-09-03","objectID":"/fuckidiotforeigner/:7:0","tags":["歪果仁","生活"],"title":"用英语怼无脑人","uri":"/fuckidiotforeigner/"},{"categories":["life"],"content":"7.1幼稚骂人 Tip\r\rI hope your butt grows together. 我希望你屁股长在一起 \r\r ","date":"2020-09-03","objectID":"/fuckidiotforeigner/:7:1","tags":["歪果仁","生活"],"title":"用英语怼无脑人","uri":"/fuckidiotforeigner/"},{"categories":["life"],"content":"7.2高冷骂人 Tip\r\rDude,that’s why nobody likes you. 难怪没人喜欢你 \r\r","date":"2020-09-03","objectID":"/fuckidiotforeigner/:7:2","tags":["歪果仁","生活"],"title":"用英语怼无脑人","uri":"/fuckidiotforeigner/"},{"categories":["大学"],"content":"线性代数笔记记录-1 ","date":"2020-09-02","objectID":"/lineralgebra/:0:0","tags":["线性代数","笔记"],"title":"线性代数笔记","uri":"/lineralgebra/"},{"categories":["大学"],"content":"1.成绩组成 ","date":"2020-09-02","objectID":"/lineralgebra/:1:0","tags":["线性代数","笔记"],"title":"线性代数笔记","uri":"/lineralgebra/"},{"categories":["大学"],"content":"2.二阶行列式 ","date":"2020-09-02","objectID":"/lineralgebra/:2:0","tags":["线性代数","笔记"],"title":"线性代数笔记","uri":"/lineralgebra/"},{"categories":["大学"],"content":"2.1组成 $$ 二阶行列式，即：D = \\left|\\begin{array}{cccc} a_{11} \u0026 a_{12} \\\\ a_{21} \u0026 a_{22} \\end{array}\\right| =a_{11}a_{22}-a_{12}a_{21} $$ $$ 其中a_{ij}(i=1,2;j=1,2)称为元素\\\\ i为行标，表明元素位于第i行；\\\\ j为列标，表明元素位于第j列。 $$ ","date":"2020-09-02","objectID":"/lineralgebra/:2:1","tags":["线性代数","笔记"],"title":"线性代数笔记","uri":"/lineralgebra/"},{"categories":["大学"],"content":"2.2性质 $$ \\left|\\begin{array}{cccc} a_{11} \u0026 a_{12} \\\\ a_{21} \u0026 a_{22} \\end{array}\\right| =\\left|\\begin{array}{cccc} a_{11} \u0026 a_{21} \\\\ a_{12} \u0026 a_{22} \\end{array}\\right| $$ $$ \\left|\\begin{array}{cccc} ka_{11} \u0026 a_{12} \\\\ ka_{21} \u0026 a_{22} \\end{array}\\right| =\\left|\\begin{array}{cccc} a_{11} \u0026 ka_{21} \\\\ a_{12} \u0026 ka_{22} \\end{array}\\right| =k\\left|\\begin{array}{cccc} a_{11} \u0026 a_{21} \\\\ a_{12} \u0026 a_{22} \\end{array}\\right| $$ $$ \\left|\\begin{array}{cccc} a_{11}+b_{11} \u0026 a_{12} \\\\ a_{12}+b_{21} \u0026 a_{22} \\end{array}\\right| =\\left|\\begin{array}{cccc} a_{11} \u0026 a_{12} \\\\ a_{21} \u0026 a_{22} \\end{array}\\right| +\\left|\\begin{array}{cccc} b_{11} \u0026 a_{12} \\\\ b_{21} \u0026 a_{22} \\end{array}\\right| $$ $$ \\left|\\begin{array}{cccc} a_{11} \u0026 a_{12} \\\\ a_{21} \u0026 a_{22} \\end{array}\\right|=- \\left|\\begin{array}{cccc} a_{12} \u0026 a_{11} \\\\ a_{22} \u0026 a_{21} \\end{array}\\right|, \\left|\\begin{array}{cccc} a_{11} \u0026 a_{12} \\\\ a_{21} \u0026 a_{22} \\end{array}\\right|=- \\left|\\begin{array}{cccc} a_{21} \u0026 a_{22} \\\\ a_{11} \u0026 a_{12} \\end{array}\\right| $$ ","date":"2020-09-02","objectID":"/lineralgebra/:2:2","tags":["线性代数","笔记"],"title":"线性代数笔记","uri":"/lineralgebra/"},{"categories":["大学"],"content":"3.三阶行列式 ","date":"2020-09-02","objectID":"/lineralgebra/:3:0","tags":["线性代数","笔记"],"title":"线性代数笔记","uri":"/lineralgebra/"},{"categories":["大学"],"content":"3.1组成 $$ \\left|\\begin{array}{cccc} a_{11} \u0026 a_{12} \u0026 a_{13} \\\\ a_{21} \u0026 a_{22} \u0026 a_{21} \\\\ a_{31} \u0026 a_{32} \u0026 a_{31} \\end{array}\\right| 称为三阶行列式 $$ ","date":"2020-09-02","objectID":"/lineralgebra/:3:1","tags":["线性代数","笔记"],"title":"线性代数笔记","uri":"/lineralgebra/"},{"categories":["大学"],"content":"3.2计算 $$ \\left|\\begin{array}{cccc} a_{11} \u0026 a_{12} \u0026 a_{13} \\\\ a_{21} \u0026 a_{22} \u0026 a_{21} \\\\ a_{31} \u0026 a_{32} \u0026 a_{31} \\end{array}\\right| = \\\\ a_{11}a_{22}a_{33}+a_{12}a_{23}a_{31}+a_{13}a_{21}a_{32}-\\\\ a_{13}a_{22}a_{31}-a_{12}a_{21}a_{33}-a_{11}a_{23}a_{32} $$ ","date":"2020-09-02","objectID":"/lineralgebra/:3:2","tags":["线性代数","笔记"],"title":"线性代数笔记","uri":"/lineralgebra/"},{"categories":["大学"],"content":"4.n阶行列式 ","date":"2020-09-02","objectID":"/lineralgebra/:4:0","tags":["线性代数","笔记"],"title":"线性代数笔记","uri":"/lineralgebra/"},{"categories":["大学"],"content":"4.1定义： $$ 用 n^2 个元素a_{ij} (i, j=1, 2, …, n)组成的记号 $$ $$ \\left|\\begin{array}{cccc} a_{11} \u0026 a_{12} \u0026 … \u0026 a_{13} \\\\ a_{21} \u0026 a_{22} \u0026 … \u0026 a_{13} \\\\ … \u0026 … \u0026 … \u0026 … \\\\ a_{31} \u0026 a_{32} \u0026 … \u0026 a_{13} \\end{array}\\right|元素a_{ij}，i为行标，j为列标 $$ 称为n阶行列式 ","date":"2020-09-02","objectID":"/lineralgebra/:4:1","tags":["线性代数","笔记"],"title":"线性代数笔记","uri":"/lineralgebra/"},{"categories":["大学"],"content":"4.2（代数）余子式 $$ 在n 阶行列式中，把元素a_{ij}所在的第i行和第j列划后，\\\\ 留下来的n－1阶行列式叫做元素 a_{ij}的余子式，记作M_{ij}.\\\\ 把A_{ij}=(-1)^{i+j}M_{ij}称为元素a_{ij}的代数余子式 $$ \r注意\r\r注意：当n = 1时，一阶行列式|a| = a，注意不要与绝对值的记号相混淆. 例如：一阶行列式|-1| = -1\r\r ","date":"2020-09-02","objectID":"/lineralgebra/:4:2","tags":["线性代数","笔记"],"title":"线性代数笔记","uri":"/lineralgebra/"},{"categories":["大学"],"content":"4.3性质 行列式与它的转置行列式相等 互换行列式的两行（列）,行列式变号. 行列式的某一行（列）中所有的元素都乘以同一个倍数 ，等于用数 乘以此行列式. 行列式中如果有两行（列）元素成比例，则此行列式为零． 若行列式的某一列（行）的元素都是两数之和，则行列式可以拆分为两个行列式的和 把行列式的某一列（行）的各元素乘以同一个倍数然后加到另一列(行)对应的元素上去，行列式不变． ","date":"2020-09-02","objectID":"/lineralgebra/:4:3","tags":["线性代数","笔记"],"title":"线性代数笔记","uri":"/lineralgebra/"},{"categories":["life","大学"],"content":"致新生-关于刚入大学的那些事 👩‍🎓欢迎新同学👨‍🎓 \r\r","date":"2020-08-25","objectID":"/forfreshstudent/:0:0","tags":["大学","生活"],"title":"致大一新生","uri":"/forfreshstudent/"},{"categories":["life","大学"],"content":"1.🥋军训必备类 注意\r\r皮带，这个对于男生很重要，一定不要忘记！！！\r\r 防晒霜（划重点！！！） 必备！！！最好多准备几瓶，买那些容易吸收的，不然涂了后一出汗就好像变成了灰，很难受的。 鞋垫 比较重要，但是不建议网上买姨妈巾鞋垫，黑色袜子。 湿巾，纸巾（军训休息时擦汗用，不要放在帽子里） 拎在手上的水壶 有一个随身携带的水杯，是必须的。如果是用矿泉水瓶有可能会被一些人当破烂收走。 提示\r\r提前在杯子上做好标记哦！\r\r ","date":"2020-08-25","objectID":"/forfreshstudent/:1:0","tags":["大学","生活"],"title":"致大一新生","uri":"/forfreshstudent/"},{"categories":["life","大学"],"content":"2.🗂️重要证件类 大学新生入学后办很多事情都要用到证件，证件类的东西一样不能少。这些东西平时不常用，但用的时候就特别重要，不可缺少，所以最好准备一个档案袋来放置这些东西。 ","date":"2020-08-25","objectID":"/forfreshstudent/:2:0","tags":["大学","生活"],"title":"致大一新生","uri":"/forfreshstudent/"},{"categories":["life","大学"],"content":"1.1 证件相关 身份证：准备4 份正反两面的复印件，复印的东西就不要等着到学校再办理了， 因为到时候学校周边复印店会排满长长的队伍。 户口本及复印件：复印 4 份，基本足够大学四年使用了。 录取通知书、高考成绩单、高考准考证：复印2 份，大部分学校开学报道的时候也要收录取通知书的复印件。 团员档案、学生档案、原高中学校的档案：重要级别等同于录取通知书， 这些档案学校会统一收上去，作为你的个人档案，跟随你一生。 个人照片：一寸照片至少要一版，12 张最佳；两寸照片也准备几张。 汇款凭据（生源地贷款相关文件）：即交了学费后给的凭证。申请了生源地贷款的同学则需要在学校统一收文件时上交即可，不用着急。 贫困证明：大学给贫困生的资助名额上相对充裕，只要你不是满身名牌，不是苹果三件套都可以申请，所以在开学前问一下学校需要提供什么材料，提前准备好。 Tip\r\r本校的19级的学姐学长们到了学校统一照相的\r\r \r","date":"2020-08-25","objectID":"/forfreshstudent/:2:1","tags":["大学","生活"],"title":"致大一新生","uri":"/forfreshstudent/"},{"categories":["life","大学"],"content":"1.2 申请助学金 需要提前准备以下内容： 个人申请书一份**（手写） 贫困证明**（由村委或者街道证明，盖章） 《高校家庭情况调查表》两份（原件，村委或者街道章+民政部门章。章必 须是原件，不允许复印。） 你的大学的《国家助学金申请表》两份（贴照片） 《高等学校家庭经济困难学生认定申请表》两份 ","date":"2020-08-25","objectID":"/forfreshstudent/:2:2","tags":["大学","生活"],"title":"致大一新生","uri":"/forfreshstudent/"},{"categories":["life","大学"],"content":"3.💰贵重物品类 手机📱、充电器、电板、耳机、充电宝、足量的数据线 银行卡💳 一般录取通知书里有一张学校所在城市的银行卡，这张卡是大学四年需要用到的，开学前提前去开户（开学当天学校外面的银行会排长队），尽可能不要弄丢了，补办需要到指定地点，步骤繁琐。 现金💸 到了大学，几乎用不大现金，身上的现金可以少带点，或者不带。但刚开学手机里或者银行卡里要有足够的钱：除了学费宿舍费外，报名当天还需要交的费用大概参考：校园卡充值+ 生活用品+军训服装+床上用品 ","date":"2020-08-25","objectID":"/forfreshstudent/:3:0","tags":["大学","生活"],"title":"致大一新生","uri":"/forfreshstudent/"},{"categories":["life","大学"],"content":"4.🛒日常用品类 1、洗漱收纳篮：咱们是公共澡堂，买一个吧，很实用。 2、香皂+香皂盒、牙刷、牙膏、漱口杯、毛巾、浴巾、洗发水、香皂、沐浴露、洗衣粉、洗衣液、水杯、湿巾、开水壶（不要喝太多桶装纯净水，开水壶接了热水喝）、小锁头、大夹子、晾衣架、樟脑球、粘钩（开学一定用得上）、插线板（宿舍有插头但是一般只有两个，需要自己接插线板） 3.、小镜子、梳子、指甲刀套装、搓操巾、卫生纸、蚊香、花露水、雨伞 4、 洗面奶等护肤品、化妆品（女）、剃须刀（男），防晒霜（必备必备！一般开学就要军训） 6、袜子、拖鞋（夏冬季）、内衣裤、平时自己的鞋子衣物（刚开学还很热，冬季的可以少带，天气冷了再寄或者买） 7、剪刀、胶水、双面胶、透明胶（别小看这些，整理床铺的时候很多人借，如果你有，就可以给自己和他人更多交流的机会） 个人认为像别人借也是个不错的idea😉 Tip\r\r以上东西如果不方便从家带，可到校后按照清单去超市购买\r\r ","date":"2020-08-25","objectID":"/forfreshstudent/:4:0","tags":["大学","生活"],"title":"致大一新生","uri":"/forfreshstudent/"},{"categories":["life","大学"],"content":"5.📐学习用品类 大学周边的文具店都比较贵，既然是学生，就免不了写写画画的，所以可以家里带一些文具，以备需要。高考后文具不要丢！不要丢！学校超市真的贵！！！ 1、笔袋、笔、便条贴、中性笔、荧光笔、2B铅笔（装在笔袋放在书包里面就可以啦） 2、笔记本电脑、散热器**——**笔记本是大学期间不可缺少的装备，绝大多数同学都会在第一学期结束前购买适合自己的。笔记本的选择要从自己的实际出发，不玩游戏的选办公类，玩游戏的选游戏本。而作为同学们人生中第一台笔记本，建议你们的购机价位在五千到八千左右，完全可以满足大学生的日常需要了。 3、U 盘32G 足够。不管是不是学生干部都要有那么一个U 盘，大学里你要写论文，看资料， 做PPT等，下载和转移文件都要用到 U 盘。 4、床上书桌：尤其在冬天，你多数是不会出宿舍的，甚至是不会下床的。对于学霸，书桌就是查资料、写论文的地方，对于学渣来说，就是打游戏刷装备的圣地，对于女生来说，书桌就是天堂电影院，总之，有一个床上书桌很方便。 提示\r\r有学长可能会卖二手的床上书桌。可以考虑一下，经济又实惠。\r\r 5、台灯 大学学校宿舍的电可能不会统一停，但晚上开灯可能会影响到宿友的休息。所以自己要有一个台灯考前夜战、挑灯写学生会材料、通宵备战演讲，必备品。 6、自己喜欢的书漫长的上学路上、军训休息无聊时、吃完饭无所事事，可以看看书丰富自己的精神内涵，喜欢看书是一个非常非常好的习惯哦~学长不喜欢看书哦😎 ","date":"2020-08-25","objectID":"/forfreshstudent/:5:0","tags":["大学","生活"],"title":"致大一新生","uri":"/forfreshstudent/"},{"categories":["life","大学"],"content":"6.🏠宿舍用品类 扫把、拖把、垃圾桶、晾衣杆、垃圾袋、饮水机、桶装水、洗洁精等（学长的宿舍不分发哦，正经人谁打扫卫生啊😉） 提示\r\r大学里可能就会那么认真打扫一次，军训期间要求的。\r\r 床上用品：枕芯、被芯、枕套、被套、床单、床垫这一套是床上必需品。建议干脆提前网上买了，入学当天就要入寝，学校商店的被子质量奇差，用个一年里面的花絮就败了。作为跟身体接触的东西，当然要好好准备呀。 夏凉被，凉席，蚊帐等根据自己的需求选择 ","date":"2020-08-25","objectID":"/forfreshstudent/:6:0","tags":["大学","生活"],"title":"致大一新生","uri":"/forfreshstudent/"},{"categories":["life","大学"],"content":"7.💊紧急药品类 感冒类（三九等） 退烧消炎类（罗红酶分散片、阿莫西林等） 止泻类 （有胃病或胃不好的） 止疼类 （众生丸、牛黄解毒片） 清火类 （吃多了辣的可能会上火，平时还是要备一些。） 口腔消炎类以及个人特殊病症的常备药碘酒、棉签、纱布创可贴等（主要为军训准备，当然最好永远也用不上） ","date":"2020-08-25","objectID":"/forfreshstudent/:7:0","tags":["大学","生活"],"title":"致大一新生","uri":"/forfreshstudent/"},{"categories":["life","大学"],"content":"8.🗺️学校的位置 ","date":"2020-08-25","objectID":"/forfreshstudent/:8:0","tags":["大学","生活"],"title":"致大一新生","uri":"/forfreshstudent/"},{"categories":["life","大学"],"content":"8.1 🌎西苑校区 自习室selfstufy \"\r自习室\r 运动场playground \"\r运动场\r 运动场playground2 \"\r运动场\r 宿舍dormitory \"\r宿舍\r Somewheresomewhere \"\rSomewhere\r 教学楼school \"\r教学楼\r 早操taichi \"\r早操\r 傍晚afternoon \"\r傍晚\r 夜晚night \"\r夜晚\r ","date":"2020-08-25","objectID":"/forfreshstudent/:8:1","tags":["大学","生活"],"title":"致大一新生","uri":"/forfreshstudent/"},{"categories":["life","大学"],"content":"8.2 🌏开元校区 ","date":"2020-08-25","objectID":"/forfreshstudent/:8:2","tags":["大学","生活"],"title":"致大一新生","uri":"/forfreshstudent/"},{"categories":["life","大学"],"content":"9.最后的寄语 \r 给大家讲了很多，但还有一些要告诉即将开始大学生活的你： 爱护自己，珍惜自己，健康很重要，因为它是革命的根本。 ","date":"2020-08-25","objectID":"/forfreshstudent/:9:0","tags":["大学","生活"],"title":"致大一新生","uri":"/forfreshstudent/"},{"categories":["documentation","文本教程"],"content":"Google Colab之挂载谷歌硬盘 GoogleColab 考虑到本人逐渐开始频繁用起来Google colab的在线程序，且使用Google colab时读取文件自己网盘文件是一个很重要的事情，所以在此记录一下自己如何读取自己的谷歌网盘 ","date":"2020-08-24","objectID":"/colabdrive/:0:0","tags":["加密","人工智能"],"title":"Google colab笔记","uri":"/colabdrive/"},{"categories":["documentation","文本教程"],"content":"1.首先需要导入人家的库 ","date":"2020-08-24","objectID":"/colabdrive/:1:0","tags":["加密","人工智能"],"title":"Google colab笔记","uri":"/colabdrive/"},{"categories":["documentation","文本教程"],"content":"1.1代码如下 \r","date":"2020-08-24","objectID":"/colabdrive/:1:1","tags":["加密","人工智能"],"title":"Google colab笔记","uri":"/colabdrive/"},{"categories":["documentation","文本教程"],"content":"1.2授权你的Gdrive 执行上面的代码后需要你打开一个链接用来授权 ","date":"2020-08-24","objectID":"/colabdrive/:1:2","tags":["加密","人工智能"],"title":"Google colab笔记","uri":"/colabdrive/"},{"categories":["documentation","文本教程"],"content":"2.授权成功 ","date":"2020-08-24","objectID":"/colabdrive/:2:0","tags":["加密","人工智能"],"title":"Google colab笔记","uri":"/colabdrive/"},{"categories":["documentation","文本教程"],"content":"2.1侧边栏看到你的硬盘已经出现了 ","date":"2020-08-24","objectID":"/colabdrive/:2:1","tags":["加密","人工智能"],"title":"Google colab笔记","uri":"/colabdrive/"},{"categories":["documentation","文本教程"],"content":"2.2通过shell查看 你可以对你的团队盘和私人盘进行操作，路径已经在文件目录中显示出来了 ","date":"2020-08-24","objectID":"/colabdrive/:2:2","tags":["加密","人工智能"],"title":"Google colab笔记","uri":"/colabdrive/"},{"categories":["documentation"],"content":"大学英语CET4考试相关 Tip\r\r这次报名9月考试的同学请注意了，再确认一下考试时间： 四级：9月19日9：00-11：20\r\r ","date":"2020-08-21","objectID":"/aboutcet4/:0:0","tags":["cet4","英语","笔记"],"title":"大学英语四级考试","uri":"/aboutcet4/"},{"categories":["documentation"],"content":"1.大学英语四级考试 \r","date":"2020-08-21","objectID":"/aboutcet4/:1:0","tags":["cet4","英语","笔记"],"title":"大学英语四级考试","uri":"/aboutcet4/"},{"categories":["documentation"],"content":"1.1流程 ","date":"2020-08-21","objectID":"/aboutcet4/:1:1","tags":["cet4","英语","笔记"],"title":"大学英语四级考试","uri":"/aboutcet4/"},{"categories":["documentation"],"content":"1.2 时间及分数分配(总分：710分) \r大学英语四级考试\r\r试卷结构\r测试内容\r测试题型 题目数量\r分值比例\r考试时间\r\r写作\r写作\r短文写作\r1\r15%\r30分钟\r\r听力理解\r短篇新闻\r选择题（单选题）\r7\r7%\r25分钟\r\r\r长对话\r选择题（单选题）\r8\r8%\r25分钟\r\r\r听力篇章\r选择题（单选题）\r10\r20%\r25分钟\r\r阅读理解\r词汇理解\r选词填空\r10\r5%\r40分钟\r\r\r长篇阅读\r匹配\r10\r10%\r40分钟\r\r\r仔细阅读\r选择题（单选题）\r10\r20%\r40分钟\r\r\r翻译\r汉译英\r段落翻译\r1\r15%\r30分钟\r\r\r总计\r\r\r57\r100%\r125分钟\r\r\r","date":"2020-08-21","objectID":"/aboutcet4/:1:2","tags":["cet4","英语","笔记"],"title":"大学英语四级考试","uri":"/aboutcet4/"},{"categories":["documentation"],"content":"2.去年四级（六级）的翻译题 ","date":"2020-08-21","objectID":"/aboutcet4/:2:0","tags":["cet4","英语","笔记"],"title":"大学英语四级考试","uri":"/aboutcet4/"},{"categories":["documentation"],"content":"2019年12月四级真题 中国家庭十分重视孩子的教育。许多父母认为应该努力工作，确保孩子受到良好的教育。他们不仅非常情愿为孩子的教育投资,而且花很多时间督促他们学习。多数家长希望孩子能上名牌大学。由于改革开放，越来越多的家长能送孩子到国外学习或参加国际交流项目，让其拓宽视野。通过这些努力，他们期待孩子健康成长，为国家的发展和繁荣做出贡献.1 中国的家庭观念与其文化传统有关。和睦的大家庭曾非常令人美慕。过去四代同堂并不少见。由于这个传统，许多年轻人婚后继续与父母同住。今天，这个传统正在改变。随着住房条件的改善,越来越多年轻夫妇选择与父母分开住。但他们之间的联系依然很密切。许多老年，人仍然帮着照看孙辈。年轻夫妇也抽时间探望父母，特别是在春节和中秋节等重要节日。2 中国汉族人的全名由姓和名组成。中文姓名的特点是，姓总是在前，名跟在其后。千百年来，父姓一-直世代相传。然而，如今,孩子跟母亲姓并不罕见。- 般来说，名有一个或两个汉字，通常承载父母对孩子的愿望。从孩子的名字可以推断出父母希望孩子成为代么样的人，或者期望他们过什么样的生活。父母非常重视给孩子取名，因为名字往往会伴随孩子一生。3 ","date":"2020-08-21","objectID":"/aboutcet4/:2:1","tags":["cet4","英语","笔记"],"title":"大学英语四级考试","uri":"/aboutcet4/"},{"categories":["documentation"],"content":"2019年12月六级真题 牡丹花色艳丽，形象高雅,象征着和平与繁荣,因而在中国被称为\"花中之王”，中国很多地方都培育和种植牡丹。千百年来,创造. 了许多诗歌和绘画赞美牡丹。唐代时期，牡丹在皇家园林普遍种植并被誉为国花，因而特别风行。十世纪时, 洛阳古城成为牡丹栽培中心，而且这一-地位一-直保持到今天。现在,成千.上万的国内游客蜂拥到洛阳参加一年一牡丹节，欣赏洛阳牡丹的独特之美,同时探索力朝古都的历史。 荷花是中国的名花之一,深受人们喜爱。中国许多地方的湖泊和池塘都适宜荷花色彩鲜艳,夏日清晨绽放,夜晚闭合，花期长达两三个月，吸引来自各地的游荷花具有多种功能,既能绿化水面，又能美化庭园，还可净化水质、减少污染、荷花迎骄阳而不惧,出污泥而不染,象征纯洁、 高雅,常来比喻人的高尚品德,画家创作的重要题材。荷花盛开的地方也是许多摄影爱好者经常光顾之地。4 梅花位居中国十大名花之首，源于中国南方,已有三千多年的栽培和种植历史。隆冬时节，五颜六色的梅花不畏严寒迎着风雪傲然绽放。在中国传统文化中，梅花象征着坚强、纯洁、高雅激励人们不畏艰难、砥砺前行。自古以来,许多诗人和画家从梅花中获取灵感，创作了无数不朽的作品。普通大众也都喜爱梅花，春节期间常用于家庭装饰。南京市已将梅花定为市花，每年举办梅花节，成千.上万的人冒着严寒到梅花山踏雪赏梅。5 ","date":"2020-08-21","objectID":"/aboutcet4/:2:2","tags":["cet4","英语","笔记"],"title":"大学英语四级考试","uri":"/aboutcet4/"},{"categories":["documentation"],"content":"3.成绩查询 全国大学英语四、六级考试（含口试）成绩查询 ","date":"2020-08-21","objectID":"/aboutcet4/:3:0","tags":["cet4","英语","笔记"],"title":"大学英语四级考试","uri":"/aboutcet4/"},{"categories":["documentation"],"content":"3.1操作流程 选择考试项目。 输入姓名和证件号码，点击查询按钮进行查询。 如果输入信息正确，对应考试的成绩信息将会在下一个页面列出。 ","date":"2020-08-21","objectID":"/aboutcet4/:3:1","tags":["cet4","英语","笔记"],"title":"大学英语四级考试","uri":"/aboutcet4/"},{"categories":["documentation"],"content":"4.关于CET ","date":"2020-08-21","objectID":"/aboutcet4/:4:0","tags":["cet4","英语","笔记"],"title":"大学英语四级考试","uri":"/aboutcet4/"},{"categories":["documentation"],"content":"4.1 官方文档 \r\r\r","date":"2020-08-21","objectID":"/aboutcet4/:4:1","tags":["cet4","英语","笔记"],"title":"大学英语四级考试","uri":"/aboutcet4/"},{"categories":["documentation"],"content":"5.结语 SkySky \"\rSky\r SkySky \"\rSky\r RiverRiver \"\rRiver\r \r Chinese families attach due importance to children’s education. Numerous parents deem that they should work hard to ensure that their children are well educated. Not only are they very willing to invest in their children’s education, but they also spend a lot of time urging them to learn. The great majority of parents expect that their children are able to go to prestigious universities. As a result of the reform and opening up, an increasing number of parents can send their children to study abroad or participate in international exchange projects, so as to broaden their horizons. Through these efforts, they expect their children to grow up healthily and contribute to the development and prosperity of the country. ↩︎ The concept of family in China is related to its cultural traditions. The large and harmonious families were once very enviable. The four generation family used to be very common, in the past. As a result of this tradition, many young people continue to live with their parents after marriage. Today, the tradition is changing. With the improvement of housing conditions, An increasing number of young couples choose to live apart from their parents. But the connection between them remains strong. And many old people still have to look after their grandchildren. Young couples also get around to visit their parents, especially during the holidays, such as the spring festival and Mid-autumn Festival. ↩︎ The full name of China’s Han ethnic group is made up of family name and given name. One characteristic of the Chinese name is that the family name always comes first, followed by given name. For thousands of years, the father’s family name has been passed on from generation to generation. However, it is not uncommon now for a child to have the mother’ S family name. Generally speaking, a given name contains one or two Chinese characters, which carries the parents’ hope for the kid. Therefore, it’s easy to infer from the name what kind of person the parents expect their child to be, or what kind of life to lead. Parents attach great importance to naming their kid as names usually go with them for a whole life. ↩︎ Lotus is one of best-known flowers in China which people love deeply. The lakes in many parts of China are suitable for lotus to grow. Lotus,which features bright color, blooms in the morning and closes in the evening with a long flowering period of two to three months,attracting tourists across the country to appreciate it. Lotus is multi-functional as it greens waters and beautify courtyards but also purify water, reduce pollution environment. Lotus, as it does not fear the strong sunshine and keeps clean in the mud, symbolizes purity and elegance and represents people’s noble morals. Therefore, it becomes important themes for poets and painters through out the Chinese history, where it blooms turns out to be the resort of many photographers. ↩︎ Plum blossom, which tops the ten most famous flowers of China, originated in south China and has a planting history of more than 3,000 years. In winter, colorful plum flowers blossom boldly against the cold. In traditional Chinese culture plum blossom symbolizes toughness, purity and grace, motivating people to face hardships and move forward bravely In history, many poets and painters gained inspiration from the flower and created countless masterpieces. Ordinary citizens are also fond of the flower, which is often used to decorate the house during the spring festival. Nanjing city has designated plumb blossom as the city flower and holds the flower festival every year,which attracts hundreds of thousands of people to appreciate the flower in snow despite the cold. ↩︎ ","date":"2020-08-21","objectID":"/aboutcet4/:5:0","tags":["cet4","英语","笔记"],"title":"大学英语四级考试","uri":"/aboutcet4/"},{"categories":["life"],"content":"生活感想-奋斗 生而为猫，我很抱歉 曾经刷的《生而为猫，我很抱歉》背面有一段文字让我感触很多： Quote\r\r高考，无非就是很多人同时做同一份卷子，然后决定去哪一座城市，最终发现，错的每一道题都是为了遇见对的人，而对的每一道题，都是为了遇见更好的自己。😉\r\r \r\r\r\rTip\r\r仅以此言献给所有不甘平凡的同伴们，只要明天的太阳照常升起，我们永不放弃！\r\r 献上自己在ins上心仪的一些图片，自己有机会了一定要到世界上旅游一番😄 BlueSeaphoto_2020-08-09_16-43-08 \"\rBlueSea\r Lake\u0026Treephoto_2020-08-09_16-44-02 \"\rLake\u0026Tree\r Sky\u0026riverphoto_2020-08-09_16-44-48 \"\rSky\u0026river\r Mountain\u0026Riverphoto_2020-08-09_16-44-53 \"\rMountain\u0026River\r 欢迎评论区留言😜 ","date":"2020-08-09","objectID":"/life1/:0:0","tags":["感想"],"title":"奋斗","uri":"/life1/"},{"categories":["大学","life"],"content":"我爱科大2020-2021校历 我爱科大2020-2021学年校历 ","date":"2020-08-08","objectID":"/ilovehaust/:0:0","tags":["学校","校历"],"title":"我爱科大校历","uri":"/ilovehaust/"},{"categories":["大学","life"],"content":"1.作息 作息workandrelax \"\r作息\r ","date":"2020-08-08","objectID":"/ilovehaust/:1:0","tags":["学校","校历"],"title":"我爱科大校历","uri":"/ilovehaust/"},{"categories":["大学","life"],"content":"2.概览 ","date":"2020-08-08","objectID":"/ilovehaust/:2:0","tags":["学校","校历"],"title":"我爱科大校历","uri":"/ilovehaust/"},{"categories":["大学","life"],"content":"3.详细 ","date":"2020-08-08","objectID":"/ilovehaust/:3:0","tags":["学校","校历"],"title":"我爱科大校历","uri":"/ilovehaust/"},{"categories":["大学","life"],"content":"3.1 第一学期 第一学期firstsemester \"\r第一学期\r ","date":"2020-08-08","objectID":"/ilovehaust/:3:1","tags":["学校","校历"],"title":"我爱科大校历","uri":"/ilovehaust/"},{"categories":["大学","life"],"content":"3.2 第二学期 第二学期secondsemester \"\r第二学期\r ","date":"2020-08-08","objectID":"/ilovehaust/:3:2","tags":["学校","校历"],"title":"我爱科大校历","uri":"/ilovehaust/"},{"categories":["Termux-api","documentation"],"content":"这是一篇用于介绍termux-dialog使用方法的文章。","date":"2020-06-11","objectID":"/termux-dialog/","tags":["教程","Termux-api","termux-dialog"],"title":"Termux-api之termux-dialog","uri":"/termux-dialog/"},{"categories":["Termux-api","documentation"],"content":"官方的命令讲解 Usage: termux-dialog widget [options] Get user input w/ different widgets! Default: text -h, help Show this help -l, list List all widgets and their options -t, title Set title of input dialog (optional) 翻译后 #使用: termux-dialog widget [options] #获取用户输入的widget或者不同的widget #默认：文本 -h, #展示这条帮助信息 -l, #列出所有的widget和它们对应的options -t, #设置dialog的标题（非必须） termux-dialog -l 讲解 Supported widgets: confirm - Show confirmation dialog #显示确认信息 [-i hint] text hint (optional) #需要提示的回答的文字 [-t title] set title of dialog (optional) checkbox - Select multiple values using checkboxes #使用复选框选择多个值 [-v \",,,\"] comma delim values to use (required) #使用逗号间隔 [-t title] set title of dialog (optional) counter - Pick a number in specified range #选择指定范围内的数字 [-r min,max,start] comma delim of (3) numbers to use (optional) #使用3个数字确定范围 [-t title] set title of dialog (optional) date - Pick a date #选择一个日期 [-t title] set title of dialog (optional) [-d \"dd-MM-yyyy kⓜ️s\"] SimpleDateFormat Pattern for date widget output (optional) #设置输出格式 radio - Pick a single value from radio buttons #从单选按钮中选择一个值 [-v \",,,\"] comma delim values to use (required) #使用逗号间隔 [-t title] set title of dialog (optional) sheet - Pick a value from sliding bottom sheet #从滑动底部表中选择一个值 [-v \",,,\"] comma delim values to use (required) #使用逗号间隔 [-t title] set title of dialog (optional) spinner - Pick a single value from a dropdown spinner #从下拉菜单中选择一个值 [-v \",,,\"] comma delim values to use (required) [-t title] set title of dialog (optional) speech - Obtain speech using device microphone #使用设备麦克风获取语音（可理解为文字转语音） [-i hint] text hint (optional) #设置提示的文字 [-t title] set title of dialog (optional) text - Input text (default if no widget specified) #输入文本 [-i hint] text hint (optional) #需要提示的文字 [-m] multiple lines instead of single (optional)* #多行文本内容 [-n] enter input as numbers (optional)* #输入类型为数字 [-p] enter input as password (optional) #输入类型为密码 [-t title] set title of dialog (optional) 示例： 1.confirm termux-dialog confirm -i \"Choose Yes or No\" -t \"Do you copy?\" //选择yes { \"code\": 0, \"text\": \"yes\", \"index\": 2 } //选择no { \"code\": 0, \"text\": \"no\", \"index\": 2 } 2.checkbox termux-dialog checkbox -v \"草莓,菠萝,香蕉,榴莲\" -t \"你喜欢吃哪些水果？\" //仅选择香蕉 { \"code\": -1, \"text\": \"[香蕉]\", \"index\": 2, \"values\": [ { \"index\": 2, \"text\": \"香蕉\" } ] } //选择全部 { \"code\": -1, \"text\": \"[草莓, 菠萝, 香蕉, 榴莲]\", \"index\": 2, \"values\": [ { \"index\": 0, \"text\": \"草莓\" }, { \"index\": 1, \"text\": \"菠萝\" }, { \"index\": 2, \"text\": \"香蕉\" }, { \"index\": 3, \"text\": \"榴莲\" } ] } 3.counter termux-dialog counter -r 1,120,18 -t \"How old are you?\" //选择19 { \"code\": -1, \"text\": \"19\", \"index\": 2 } 4.date termux-dialog date -t \"2020年国庆日期：\" -d \"yyyy-MM-dd\" //日期选择为2020年10月1日 { \"code\": -1, \"text\": \"2020-10-01\", \"index\": 2 } 5.radio termux-dialog radio -v \"男生,女生\" -t \"你喜欢男生还是女生？\" //选择女生 { \"code\": -1, \"text\": \"女生\", \"index\": 1 } 6.sheet termux-dialog sheet -v \"月球,地球,火星\" -t \"你来自哪里？\" //选择地球 { \"code\": 0, \"text\": \"地球\", \"index\": 1 } 7.spinner termux-dialog spinner -v \"语文,综合,英语,数学\" -t \"高考第三门考什么？\" //选择综合 { \"code\": -1, \"text\": \"综合\", \"index\": 1 } 8.speech termux-dialog speech -i \"你叫什么名字呀？\" -t \"What is your name?\" { \"code\": 0, \"text\": \"布里啾啾底部里都\", \"index\": 1 } 9.text termux-dialog text -i \"你的qq号码：\" -t \"提示信息\" -n //输入我的qq号 { \"code\": -1, \"text\": \"1053651085\", \"index\": 1 } termux-dialog text -i \"你的qq密码：\" -t \"提示信息\" -p { \"code\": -1, \"text\": \"shazicaihuiqushi\", \"index\": 1 } termux-dialog text -i \"写一篇10亿字的读后感：\" -t \"提示信息\" -m { \"code\": -1, \"text\": \"你\\n在\\n想\\n屁\\n吃\", \"index\": 1 } 提取文本内容 如果你不用jq来提取json字符转中text后面的内容，那么下面的一串代码将会帮助到你 #适用于大多情况 #弹出对话框，并将对话框的内容作为shell命令执行 termux-dialog -t \"Enter shell command\"|awk -F'\"' '$2=/text/{print $4}'|bash ","date":"2020-06-11","objectID":"/termux-dialog/:0:0","tags":["教程","Termux-api","termux-dialog"],"title":"Termux-api之termux-dialog","uri":"/termux-dialog/"},{"categories":["Termux-api","documentation"],"content":"这是一篇用于介绍termux-toast使用方法的文章。","date":"2020-06-11","objectID":"/termux-toast/","tags":["教程","Termux-api","termux-dialog"],"title":"Termux-api之termux-toast","uri":"/termux-toast/"},{"categories":["Termux-api","documentation"],"content":"官方的命令讲解 Usage: termux-toast [-b bgcolor] [-c color] [-g gravity] [-s] [text] Show text in a Toast (a transient popup). The text to show is either supplied as arguments or read from stdin if no arguments are given. -h show this help -b set background color (default: gray) -c set text color (default: white) -g set position of toast: [top, middle, or bottom] (default: middle) -s only show the toast for a short while NOTE: color can be a standard name (i.e. red) or 6 / 8 digit hex value (i.e. \"#FF0000\" or \"#FFFF0000\") where order is (AA)RRGGBB. Invalid color will revert to default value 翻译后: #使用： termux-toast [-b bgcolor] [-c color] [-g gravity] [-s] [text] #在Toast中显示文本（瞬态弹出窗口） #要显示的文本要么作为参数提供，要么在未提供参数的情况下从标准输入读取。 -h #展示这条帮助信息 -b #设置背景颜色（默认：灰色） -c #设置文本颜色（默认：白色） -g #设置弹窗的位置【顶部，中部或者底部】（默认：中部） -s #仅显示片刻吐司注意：颜色可以是标准名称（例如：红色、6/8位十六进制值）。无效的颜色将恢复为默认值 示例： 1.低级弹窗 #弹出Brief termux-toast Brief #如果要弹出的信息中有空格，则需要加引号，否则空格后面的内容会被当作参数传递。 2.中级弹窗 #弹出Helo Brief termux-toast -b yellow -c red -g bottom -s \"Hello Brief\" # -b yellow 设置背景颜色为黄色 # -c red 设置文本颜色为红色 # -g bottom 设置弹窗位置为底部 # -s 显示时间比不加 -s 短一点点 3.高级弹窗 #弹出变量内容 num=520 termux-toast -b yellow -c red -g middle -s $num termux-toast -b yellow -c red -g middle -s $RANDOM #随机弹出一串数字 ","date":"2020-06-11","objectID":"/termux-toast/:0:0","tags":["教程","Termux-api","termux-dialog"],"title":"Termux-api之termux-toast","uri":"/termux-toast/"},{"categories":["大学"],"content":"课时一 复数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:0:0","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"1课时一 复数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:1:0","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"1.复数的表示、几何意义 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:1:1","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"2.复数的运算 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:1:2","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"3.复数的指数形式 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:1:3","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"4.复数的方根 课时二 复变函数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:1:4","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"课时二 复变函数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:2:0","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"1.定义 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:2:1","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"2.复数可导条件（柯西黎曼方程） ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:2:2","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"3.解析函数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:2:3","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"4.判断函数可导/解析步骤 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:2:4","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"5.可导 连续 解析 关系 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:2:5","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"6.调和函数 课时三 初等函数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:2:6","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"课时三 初等函数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:3:0","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"1.exp指数函数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:3:1","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"2.Ln对数函数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:3:2","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"3.a^b幂函数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:3:3","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"4.三角函数 课时四 级数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:3:4","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"课时四 级数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:4:0","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"1.复数列的极限 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:4:1","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"2.收敛、收敛半径 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:4:2","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"3.和函数、幂级数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:4:3","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"4.洛朗级数 课时五 求积分 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:4:4","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"课时五 求积分 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:5:0","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"1.简单方法 参数方程法 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:5:1","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"2.柯西古萨基本定理 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:5:2","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"3.柯西积分公式 课时六 留数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:5:3","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"课时六 留数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:6:0","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"1.奇点和零点 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:6:1","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"2.留数的定义 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:6:2","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"3.求留数的规则I、II ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:6:3","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"4.求留数的规则III、IV 课时七 利用留数求积分 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:6:4","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"课时七 利用留数求积分 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:6:5","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"1.利用留数求积分 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:6:6","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"2.求积分方法总结 课时八 傅里叶变换 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:6:7","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"课时八 傅里叶变换 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:7:0","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"1.δ(t)函数 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:7:1","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"2.傅里叶变换 课时九 拉普拉斯变换 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:7:2","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"课时九 拉普拉斯变换 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:8:0","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"1.拉普拉斯知识 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:9:0","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"1.定义和性质 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:9:1","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"2.常见拉普拉斯变换对 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:9:2","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"3.常用拉普拉斯变换的性质 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:9:3","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"2.应用 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:10:0","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"1.用拉普拉斯变换求初值问题 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:10:1","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"2.用拉氏变换解方程 ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:10:2","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"3.利用拉氏变换解方程（卷积） ","date":"2020-06-03","objectID":"/complexvariableintegraltransform/:10:3","tags":["复变函数","积分变换","知识笔记"],"title":"复变函数与积分变换知识整理","uri":"/complexvariableintegraltransform/"},{"categories":["大学"],"content":"实验视频来源于bilibili物理老师李传国","date":"2020-05-27","objectID":"/ecperiment1/","tags":["物理","实验","教程"],"title":"科大奥锐虚拟仿真实验","uri":"/ecperiment1/"},{"categories":["大学"],"content":"科大奥锐虚拟仿真实验 实验视频来源于bilibili物理老师李传国的教学视频，在此表示感谢！ ","date":"2020-05-27","objectID":"/ecperiment1/:0:0","tags":["物理","实验","教程"],"title":"科大奥锐虚拟仿真实验","uri":"/ecperiment1/"},{"categories":["大学"],"content":"科大奥锐虚拟仿真实验 ","date":"2020-05-27","objectID":"/ecperiment1/:1:0","tags":["物理","实验","教程"],"title":"科大奥锐虚拟仿真实验","uri":"/ecperiment1/"},{"categories":["大学"],"content":"自组式直流电桥测电阻 \r","date":"2020-05-27","objectID":"/ecperiment1/:1:1","tags":["物理","实验","教程"],"title":"科大奥锐虚拟仿真实验","uri":"/ecperiment1/"},{"categories":["大学"],"content":"不良导体热导率的测量实验 \r参考数据： 128.78 7.18 129.18 8.10 3.35 2.40 2.66 2.61 2.56 2.51 2.47 2.42 2.38 2.34 2.30 2.26 2.22 2.19 0.0014 0.1465 ","date":"2020-05-27","objectID":"/ecperiment1/:1:2","tags":["物理","实验","教程"],"title":"科大奥锐虚拟仿真实验","uri":"/ecperiment1/"},{"categories":["documentation"],"content":"推送第三方jar至/system/framework ","date":"2020-03-14","objectID":"/framework.zh/:0:0","tags":["Android","Shell","教程"],"title":"制作自己的jar并用shell调用","uri":"/framework.zh/"},{"categories":["documentation"],"content":"1.工具 安卓手机 AIDE软件 MT管理器 Termux软件 ","date":"2020-03-14","objectID":"/framework.zh/:1:0","tags":["Android","Shell","教程"],"title":"制作自己的jar并用shell调用","uri":"/framework.zh/"},{"categories":["documentation"],"content":"2.教程 打开AIDE，创建一个java项目。我命名为TestShell 项目新建后会自动生成Main.Java，因为仅供测试，便不再做改动，直接点击右上角的运行按钮编译运行，控制台会打印“hellow world”和让你输入数字。 用MT文件管理器打开项目所在文件夹，进入TestShell/bin/release/dex/,会有下图中的目录和文件，classes.dex.zip和oat/arm64/目录下的classes.dex.odex、classes.dex.vdex的这三个文件就是所需要的。 将classes.dex.zip重命名为TS.jar,用re管理器复制到/system/framework下，修改权限为644 ；将classes.dex.odex、classes.dex.vdex分别改名为TS.odex和TS.vdex,复制到/system/framework/oat/arm64目录下，该权限为644 新建脚本，命名为ts ，脚本内容如下： #!/system/bin/sh base=/system export CLASSPATH=$base/framework/TS.jar exec app_process $base/bin Main \"$@\" 将脚本复制到/system/bin下，修改权限为755。 打开终端模拟器，以root权限或系统用户权限运行runtest命令。 ","date":"2020-03-14","objectID":"/framework.zh/:2:0","tags":["Android","Shell","教程"],"title":"制作自己的jar并用shell调用","uri":"/framework.zh/"},{"categories":["文本教程","documentation"],"content":"谷歌网盘映射到本地","date":"2020-03-08","objectID":"/googledrivemap.zh/","tags":["Google","教程","网盘"],"title":"GoogleDrive映射到本地","uri":"/googledrivemap.zh/"},{"categories":["文本教程","documentation"],"content":"GoogleTeamDrive映射到本地 ","date":"2020-03-08","objectID":"/googledrivemap.zh/:0:0","tags":["Google","教程","网盘"],"title":"GoogleDrive映射到本地","uri":"/googledrivemap.zh/"},{"categories":["文本教程","documentation"],"content":"1.工具安装工具 rclone和winsfp（Windows使用rclone必要插件） ","date":"2020-03-08","objectID":"/googledrivemap.zh/:1:0","tags":["Google","教程","网盘"],"title":"GoogleDrive映射到本地","uri":"/googledrivemap.zh/"},{"categories":["文本教程","documentation"],"content":"2.配置工具 进入rclone所在文件夹，shift+鼠标右键在当前目录打开powershell（当然你也可以添加到你的环境变量里面，这里就不做演示了。） 输入命令： cmd rclone.exe config 开始配置rclone 按n添加新配置，并为其命名(此处命名为GoogleDrive) 选择13，然后回车 到这里选择1 这里第一次直接回车，然后后面的选择n 然后会让你登陆你的谷歌账号登陆然后选择GoogleTeam就行了。 到这里我选择2 到这里基本上就可以了，输入y 输入q，然后会回车退出 ","date":"2020-03-08","objectID":"/googledrivemap.zh/:2:0","tags":["Google","教程","网盘"],"title":"GoogleDrive映射到本地","uri":"/googledrivemap.zh/"},{"categories":["文本教程","documentation"],"content":"3.挂载到本地 rclone.exe mount Brief:/ j: —-vfs-cache-mode off 其中“Brief”是之前命名的网盘配置；“:/”代表挂载网盘根目录，你也可以“:/foldername/”来挂载网盘中的某个文件夹。—-vfs-cache-mode用来指定本地缓存，这里用“off”将其关闭，以测试网络传输真是速度。平时可以使用“writes”来启用缓存。配置完成后效果如下。 然后你就可以操作你的网盘了 注：1PB=2(10) TB=1024TB ","date":"2020-03-08","objectID":"/googledrivemap.zh/:3:0","tags":["Google","教程","网盘"],"title":"GoogleDrive映射到本地","uri":"/googledrivemap.zh/"},{"categories":["文本教程","documentation"],"content":"这篇博客讲一下怎么用Google Drive免费搭建个人永久直链网盘。","date":"2020-03-05","objectID":"/googledrivefreeselfish.zh/","tags":["网盘","教程","Google"],"title":"Google Drive免费搭建网盘","uri":"/googledrivefreeselfish.zh/"},{"categories":["文本教程","documentation"],"content":"Google Drive免费搭建个人网盘 上篇博客讲了怎么获得无限网盘容量，这篇博客讲一下怎么用Google Drive免费搭建个人永久直链网盘。 ","date":"2020-03-05","objectID":"/googledrivefreeselfish.zh/:0:0","tags":["网盘","教程","Google"],"title":"Google Drive免费搭建网盘","uri":"/googledrivefreeselfish.zh/"},{"categories":["文本教程","documentation"],"content":"1.GoIndex获取代码 首先访问GoIndex网站 ","date":"2020-03-05","objectID":"/googledrivefreeselfish.zh/:1:0","tags":["网盘","教程","Google"],"title":"Google Drive免费搭建网盘","uri":"/googledrivefreeselfish.zh/"},{"categories":["文本教程","documentation"],"content":"第一步：获取认证码 选择你的账号登陆 复制粘贴到下面第一个输入框内 复制，粘贴到目录ID，根目录密码可以不用填写，后面可以修改的。 ","date":"2020-03-05","objectID":"/googledrivefreeselfish.zh/:1:1","tags":["网盘","教程","Google"],"title":"Google Drive免费搭建网盘","uri":"/googledrivefreeselfish.zh/"},{"categories":["文本教程","documentation"],"content":"第二步：生成代码 var authConfig = { \"siteName\": \"GoIndex\", // 网站名称 \"root_pass\": \"index\", // 根目录密码，优先于.password \"version\" : \"1.0.6\", // 程序版本 \"theme\" : \"material\", // material classic \"client_id\": \"**********.apps.googleusercontent.com\", \"client_secret\": \"***********************\", \"refresh_token\": \"**************************\", // 授权 token \"root\": \"0AMaMyTwt7_s3Uk9PVA\" // 根目录ID }; var gd; var html = ` \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003cmeta charset=\"utf-8\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0,maximum-scale=1.0, user-scalable=no\"/\u003e \u003ctitle\u003e${authConfig.siteName}\u003c/title\u003e \u003cscript src=\"//cdn.jsdelivr.net/combine/gh/jquery/jquery@3.2/dist/jquery.min.js,gh/donwa/goindex@${authConfig.version}/themes/${authConfig.theme}/app.js\"\u003e\u003c/script\u003e \u003c/head\u003e \u003cbody\u003e \u003c/body\u003e \u003c/html\u003e `; addEventListener('fetch', event =\u003e { event.respondWith(handleRequest(event.request)); }); /** * Fetch and log a request * @param {Request} request */ async function handleRequest(request) { if(gd == undefined){ gd = new googleDrive(authConfig); } ************************* 复制代码，马上要用到呢 ","date":"2020-03-05","objectID":"/googledrivefreeselfish.zh/:1:2","tags":["网盘","教程","Google"],"title":"Google Drive免费搭建网盘","uri":"/googledrivefreeselfish.zh/"},{"categories":["文本教程","documentation"],"content":"Cloud flare快速部署 进入Cloud flare网站注册一个账号。然后看下图 把代码替换为你原来复制的 然后你就可以拥有你自己的网盘了，并且访问不需要梯子，文件下载可以用idm或者adm专用下载器。 至此，教程结束！ ","date":"2020-03-05","objectID":"/googledrivefreeselfish.zh/:2:0","tags":["网盘","教程","Google"],"title":"Google Drive免费搭建网盘","uri":"/googledrivefreeselfish.zh/"},{"categories":["documentation","文本教程"],"content":"这篇博客讲一下怎么免费获得Google Drive无限空间","date":"2020-03-05","objectID":"/getgoogleteamdrive.zh/","tags":["网盘","教程","Google"],"title":"免费获得Google Drive无限空间","uri":"/getgoogleteamdrive.zh/"},{"categories":["documentation","文本教程"],"content":"免费获得Google Drive无限空间 Google Drive默认情况先会给你15G的储存空间，但是这些空间对于一些人来说不够用的，并且Google Drive的价格也是比骄昂贵的。本博客主要讲述的是如何获得无限量容量的Google Drive储存空间。 ","date":"2020-03-05","objectID":"/getgoogleteamdrive.zh/:0:0","tags":["网盘","教程","Google"],"title":"免费获得Google Drive无限空间","uri":"/getgoogleteamdrive.zh/"},{"categories":["documentation","文本教程"],"content":"获得Google Team团队盘 进入网站后填写相关信息，如图： TeamDrive名称自己想好填写一个，邮箱地址记得要用你的google邮箱，填好后点击submit静静等待创建 创建成功后会显示下面信息： 进入你的Google Drive你会发现你有个共享云端硬盘 然后你就可以享有Google Drive无限量网盘了^_^ ","date":"2020-03-05","objectID":"/getgoogleteamdrive.zh/:1:0","tags":["网盘","教程","Google"],"title":"免费获得Google Drive无限空间","uri":"/getgoogleteamdrive.zh/"},{"categories":["documentation","文本教程"],"content":"怎么使用？？？ 这个共享网盘是你自己的，你可以存放一些电影或者图片等等资源，下面讲解一下具体使用方法： ","date":"2020-03-05","objectID":"/getgoogleteamdrive.zh/:2:0","tags":["网盘","教程","Google"],"title":"免费获得Google Drive无限空间","uri":"/getgoogleteamdrive.zh/"},{"categories":["documentation","文本教程"],"content":"1.找一个别人分享的资源 我找了一个流浪地球电影,然后右键选择 添加添加到“已加星标” 然后点击已加星标 然后右键选择复制 这时候会创建一个副本 原来的那个可以移除了，然后重命名创建的副本 然后右键选择移至 移至到你的共享云端硬盘里面，这样就不会占用你的储存空间了，通过这种方法你可以存储大量的资源了^_^ ","date":"2020-03-05","objectID":"/getgoogleteamdrive.zh/:2:1","tags":["网盘","教程","Google"],"title":"免费获得Google Drive无限空间","uri":"/getgoogleteamdrive.zh/"},{"categories":["软件推荐","documentation"],"content":"WIN和Android软件都含有图片自动上传到图床","date":"2020-03-04","objectID":"/markdownsoftware.zh/","tags":["软件","教程","Markdown"],"title":"Markdown软件推荐","uri":"/markdownsoftware.zh/"},{"categories":["软件推荐","documentation"],"content":"Markdown写作软件推荐 ","date":"2020-03-04","objectID":"/markdownsoftware.zh/:0:0","tags":["软件","教程","Markdown"],"title":"Markdown软件推荐","uri":"/markdownsoftware.zh/"},{"categories":["软件推荐","documentation"],"content":"1.WIN ","date":"2020-03-04","objectID":"/markdownsoftware.zh/:1:0","tags":["软件","教程","Markdown"],"title":"Markdown软件推荐","uri":"/markdownsoftware.zh/"},{"categories":["软件推荐","documentation"],"content":"Typora 自从电脑开始写markdown笔记的时候我就开始用Typora了，刚开始用的时候还没有图片自动上传功能，几天之后软甲更新了，来看一下官方文档吧！ 刚开始我用的是Picgo app，但是用过几次后发现不稳定，所以我开始使用picgo-core通过gitee搭建自己的图床，在网上找了一些解决办法，然后配置测试，最终完成。下面讲解一下具体配置方法： 打开文件\u003e偏好设置\u003e图像，找到上传服务，选择picgo-core(command line)，首次需要下载。 打开命令提示符开始安装picgo npm install picgo -g 前提是你的电脑安装了nodejs才可以。 安装后输入： picgo -h 查看命令帮助 ","date":"2020-03-04","objectID":"/markdownsoftware.zh/:1:1","tags":["软件","教程","Markdown"],"title":"Markdown软件推荐","uri":"/markdownsoftware.zh/"},{"categories":["软件推荐","documentation"],"content":"安装gitee插件 picgo install gitee #安装gitee插件命令 picgo use #通过方向键选择gitee 选择gitee插件好后，打开配置文件 输入 .picgo\\config.json 配置信息填写如下： { \"PICGO_ENV\": \"GUI\", \"needReload\": false, \"settings\": { \"showUpdateTip\": true, \"server\": { \"port\": 36679, \"host\": \"127.0.0.1\", \"enable\": true }, \"shortKey\": { \"picgo:upload\": { \"enable\": true, \"key\": \"CommandOrControl+Shift+P\", \"name\": \"upload\", \"label\": \"快捷上传\" } }, \"pasteStyle\": \"markdown\" }, \"picBed\": { \"current\": \"gitee\", \"smms\": true, \"gitee\": { \"message\": null, \"owner\": \"gitee的账户名字\", \"path\": \"仓库中存放图片的文件夹\", \"repo\": \"仓库名字\", \"token\": \"你gitee的token\", \"url\": \"https://gitee.com/\" } }, \"picgoPlugins\": { \"picgo-plugin-gitee\": true }, \"debug\": true } 可以直接复制粘贴到你的配置文件中，然后保存关闭即可。 注意 ，用typora测试图片上传的时候不要重复测试，因为第一次测试成功后你的仓库中已经有了测试的图片，再次测试会导致出错的，可以在typora里直接粘贴图片进行上传测试。 ","date":"2020-03-04","objectID":"/markdownsoftware.zh/:1:2","tags":["软件","教程","Markdown"],"title":"Markdown软件推荐","uri":"/markdownsoftware.zh/"},{"categories":["软件推荐","documentation"],"content":"2.Android 安卓上推荐的软件是MarkdownQ，软件可以在酷安里面找到 打开软件可以直接插入图片，从相册选择图片，链接选择类型为网络链接，这样你的图片会自动上传到smms图床上面 注意，由于软件内部smms的api已经过期了，需要把原来的api替换掉 新的api为 https://sm.ms/api/v2/upload/ 下面是我替换好的 然后保存重新打包apk签名就可以安装使用了^_^ ","date":"2020-03-04","objectID":"/markdownsoftware.zh/:2:0","tags":["软件","教程","Markdown"],"title":"Markdown软件推荐","uri":"/markdownsoftware.zh/"},{"categories":["破解教程","documentation"],"content":"这是一篇用于下载网易云vip音乐的教程","date":"2020-02-29","objectID":"/netease.zh/","tags":["破解","教程","音乐"],"title":"Android免费下载网易云VIP音乐","uri":"/netease.zh/"},{"categories":["破解教程","documentation"],"content":"Android免费下载网易云VIP音乐 这里介绍了三种方法，每种方法都有其优缺点，可以选择一种适合自己的方法使用。 ","date":"2020-02-29","objectID":"/netease.zh/:0:0","tags":["破解","教程","音乐"],"title":"Android免费下载网易云VIP音乐","uri":"/netease.zh/"},{"categories":["破解教程","documentation"],"content":"方法一：修改手机代理 ","date":"2020-02-29","objectID":"/netease.zh/:1:0","tags":["破解","教程","音乐"],"title":"Android免费下载网易云VIP音乐","uri":"/netease.zh/"},{"categories":["破解教程","documentation"],"content":"这种方法可以说是最简单的了，对手机没有什么要求，不需要使用什么工具，只需修改手机代理即可。 打开wifi连接的详细设置界面 如图所示： 代理： 代理自动配置 PAC网址： https://wy.ydlrqx.com/proxy.pac 然后点击保存，打开网易云音乐搜索想要听的歌曲就行了！ ！！！注意！！！ 如果歌曲听完后需要将代理重新设置为无，不然无法上网！ ","date":"2020-02-29","objectID":"/netease.zh/:1:1","tags":["破解","教程","音乐"],"title":"Android免费下载网易云VIP音乐","uri":"/netease.zh/"},{"categories":["破解教程","documentation"],"content":"方法二：安装xposed模块 ","date":"2020-02-29","objectID":"/netease.zh/:2:0","tags":["破解","教程","音乐"],"title":"Android免费下载网易云VIP音乐","uri":"/netease.zh/"},{"categories":["破解教程","documentation"],"content":"这种方法对手机要求较高，需要手机安装有xposed框架或ed xposed框架。 安装UnblockMusic Pro模块，并在框架中激活此模块。 并在模块中配置好 然后打开网易云音乐即可下载vip音乐了。 ","date":"2020-02-29","objectID":"/netease.zh/:2:1","tags":["破解","教程","音乐"],"title":"Android免费下载网易云VIP音乐","uri":"/netease.zh/"},{"categories":["破解教程","documentation"],"content":"方法三：手机端搭建代理服务 ","date":"2020-02-29","objectID":"/netease.zh/:3:0","tags":["破解","教程","音乐"],"title":"Android免费下载网易云VIP音乐","uri":"/netease.zh/"},{"categories":["破解教程","documentation"],"content":"此方法比前两种方法要麻烦的多，手机需要安装软件Termux软件界面 如图所示： 依次输入下面的命令： pkg undata pkg upgrade pkg install nodejs git clone https://github.com/nondanee/UnblockNeteaseMusic.git cd UnblockNeteaseMusic node app.js 如图： 我的nodejs已经安装好了 然后手机上的代理服务搭建好了，接下来需要设置手机的代理 http://127.0.0.1:8080/proxy.pac 然后与方法一的配置都一样了，只不过PAC代理改为这个，剩下的这里就不再详细说了。 至此，教程结束！！！ ","date":"2020-02-29","objectID":"/netease.zh/:3:1","tags":["破解","教程","音乐"],"title":"Android免费下载网易云VIP音乐","uri":"/netease.zh/"},{"categories":["Shell","documentation"],"content":"这是一篇关于shell启动命令的简单文章。","date":"2020-02-26","objectID":"/shell-dingding.zh/","tags":["Shell","教程","Android"],"title":"通过shell命令启动活动","uri":"/shell-dingding.zh/"},{"categories":["Shell","documentation"],"content":"通过shell命令启动活动 所用工具：mt管理器 钉钉 闲着无聊，研究了一点关于am start命令目的为了启动某一项活动达到定时完成任务的目的 具体参数：am start -n 包名/活动名 通过mt管理器找到应用程序即可找到包名，通过mt管理器的Activity记录就能找到活动名 找到包名和活动名后打开mt管理器输入命令 am start -n com.alibaba.android.rimet/com.alibaba.lightapp.runtime.activity.CommonWebViewActivity 回车出现了一些错误“url不能为空” 通过网上搜索了解到am start传递网址的方法 具体参数：am start -d url链接 于是我准备通过抓包抓取钉钉的url链接，抓了一大堆网址试了几个不行，就懒得分析了。然后我又在钉钉里面找，找到了 然后开始测试：输入命令 am start -n com.alibaba.android.rimet/com.alibaba.lightapp.runtime.activity.CommonWebViewActivity -d https://landray.dingtalkapps.com/alid/app/report/home.html?corpid=ding114699f0a46bc4ac5d6980865\u0026id=16ea1f906f2baa17d6a42ba896f3\u0026skip=1\u0026dd_from=qrcode\u0026dd_progress=false\u0026sourcefrom=immsg#/createRepor 可以了，如果还想更加完善一点可以写个shell函数通过inputtap命令来模拟点击、inputswipe来模拟滑动，这里我就不详细讲解了 ","date":"2020-02-26","objectID":"/shell-dingding.zh/:0:0","tags":["Shell","教程","Android"],"title":"通过shell命令启动活动","uri":"/shell-dingding.zh/"},{"categories":["documentation"],"content":"这是一篇用于预览 Markdown 基本语法的文章。","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"这是一篇用于预览  Markdown 基本语法的文章。 文章内容基于 GitHub Flavored Markdown Spec。 不包含复杂的规则说明，仅仅展示 GFM 所约定的 Markdown 基本语法。 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:0:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"1 引言  Markdown 是一种用于编写结构化文档的纯文本格式。它基于电子邮件和论坛文章的格式所约定。 它由 John Gruber (在 Aaron Swartz 的帮助下)开发，于 2004 年以语法描述和用于将 Markdown 转换为 HTML 的 Perl 脚本 (Markdown.pl) 的形式发布。 在接下来的十年中，许多实现被开发出来。一些用脚注、表和其他文档元素的约定扩展了原始 Markdown 语法。 有些允许 Markdown 文档以 HTML 以外的格式呈现。 像 reddit，StackOverflow 和 GitHub 这样的网站有上百万的用户在使用 Markdown。 Markdown 开始被应用于网络以外的领域，包括作者书籍、文章、幻灯片、信件和课堂笔记。 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:1:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"2 块和内联元素 我们可以把一个文档看成一系列的块，如段落、引用、列表、标题和代码块。 有些块(如引号和列表)可以包含其它的块，即 容器块； 其他的块(如标题和段落)则包含内联元素(如文本、链接、强调、图像、内联代码等)，即 叶子块。 块的符号总是优先于内联元素的符号。例如： - `one - two` `one two` ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:2:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"3 叶子块 本节描述用于组成 Markdown 文档的不同类型的叶子块。 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:3:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"3.1 换行符 *** ------ ____ ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:3:1","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"3.2 标题 关于 ATX 风格标题和 Setext 风格标题\r\r本文只展示 ATX 风格标题，关于 Setext 风格标题的介绍请参考 GFM Setext headings 说明。 笔者不推荐在 Hugo 的 Markdown 文档中使用 Setext 风格标题。 \r\r ## H2 二级标题 ### H3 三级标题 #### H4 四级标题 ##### H5 五级标题 ###### H6 六级标题 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:3:2","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"H2 二级标题 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:4:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"H3 三级标题 H4 四级标题 H5 五级标题 H6 六级标题 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:4:1","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"3.3 代码块 关于缩进式代码块和围栏式代码块\r\r本文只展示围栏式代码块，关于缩进式代码块的介绍请参考 GFM Indented code blocks 说明。 笔者不推荐在 Hugo 的 Markdown 文档中使用缩进式代码块。 \r\r ``` foo() ``` ~~~ foo() ~~~ ```` foo() ```` ​```ruby def foo(x) return 3 end ``` foo() foo() foo() ​```ruby def foo(x) return 3 end package main import \"fmt\" func main() { fmt.Println(\"Hello, 世界\") } ### 3.4 段落 ```markdown 这是一个段落。 这还是之前段落的一部分。 这是新的段落。 这是一个段落。 这还是之前段落的一部分。 这是新的段落。 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:4:2","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"3.5 引用链接的定义 [foo]: / \"title\" [foo] [bar]: / [bar] foo bar ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:4:3","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"3.6 空白行 块之间的空白行将被忽略，除了它们在确定列表是紧还是松时所起的作用。 文档开头和结尾的空行也会被忽略。 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:4:4","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"4 容器块 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:5:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"4.1 引用 \u003e Foo \u003e \u003e - **bar** \u003e - baz Foo bar baz ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:5:1","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"4.2 无序列表 - 项目 1 * 项目 A - 项目 B 一些说明 + 项目 a * 项目 b - 项目 c + 项目 C + 项目 2 * 项目 3 项目 1 项目 A 项目 B 一些说明 项目 a 项目 b 项目 c 项目 C 项目 2 项目 3 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:5:2","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"4.3 有序列表 1. 项目 1 1. 项目 A 2. 项目 B 一些说明 1. 项目 a 2. 项目 b 3. 项目 c 3. 项目 C 2. 项目 2 3. 项目 3 项目 1 项目 A 项目 B 一些说明 项目 a 项目 b 项目 c 项目 C 项目 2 项目 3 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:5:3","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"4.4 任务列表 - [ ] 任务 1 * [X] 任务 A - 任务 B + [ ] 任务 a * [ ] 任务 b - [X] 任务 c + [X] 任务 C + [ ] 任务 2 * [X] 任务 3 任务 1 任务 A 任务 B 任务 a 任务 b 任务 c 任务 C 任务 2 任务 3 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:5:4","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"4.5 表格 | _颜色_ | 水果 | 蔬菜 | | ---------- |:---------------:| -----------:| | 红色 | *苹果* | 辣椒 | | ~~橙色~~ | 橘子 | **胡萝卜** | | 绿色 | ~~***梨子***~~ | 菠菜 | 颜色 水果 蔬菜 红色 苹果 辣椒 橙色 橘子 胡萝卜 绿色 梨子 菠菜 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:5:5","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"3. 页内锚 [脚注](#footnote) ## 4. 脚注 {#footnote} 脚注 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:6:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"4. 脚注 这是一个基本的数字脚注[^1] 带有 \"label\" 标签的脚注[^label] 下定义的脚注[^!DEF] 带有链接的脚注[^pa] [^1]: 这是一个基本的数字脚注 [^label]: 带有 \"label\" 标签的脚注 [^pa]: [LoveIt 主题](https://github.com/dillonzq/LoveIt) [^!DEF]: 下定义的脚注 这是一个基本的数字脚注1 带有 “label” 标签的脚注2 下定义的脚注3 带有链接的脚注4 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:7:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"5. 内联格式 `内联代码块` \u003ckbd\u003ectrl\u003c/kbd\u003e+\u003ckbd\u003ealt\u003c/kbd\u003e+\u003ckbd\u003edel\u003c/kbd\u003e **加粗 1** 和 __加粗 2__ *倾斜 1* 和 _倾斜 2_ ~~删除线~~ ***加粗 1 和 倾斜 1*** ___加粗 2 和 倾斜 2___ __*加粗 2 和 倾斜 1*__ **_加粗 1 和 倾斜 2_** ~~*删除线 倾斜 1*~~ 和 *~~删除线 倾斜 2~~* ~~_删除线 倾斜 2_~~ 和 _~~删除线 倾斜 2~~_ ~~**删除线 加粗 1**~~ 和 **~~删除线 加粗 1~~** ~~__删除线 加粗 2__~~ 和 __~~删除线 加粗 2~~__ ~~***删除线 倾斜 1 加粗 1***~~ 和 ***~~删除线 倾斜 1 加粗 1~~*** ~~___删除线 倾斜 2 加粗 2___~~ 和 ___~~删除线 倾斜 2 加粗 2~~___ **~~*删除线 倾斜 1 加粗 1*~~** 和 *~~**删除线 倾斜 1 加粗 1**~~* __~~_删除线 倾斜 2 加粗 2_~~__ 和 _~~__删除线 倾斜 2 加粗 2__~~_ **~~_删除线 倾斜 2 加粗 1_~~** 和 _~~**删除线 倾斜 2 加粗 1**~~_ __~~*删除线 倾斜 1 加粗 2*~~__ 和 *~~__删除线 倾斜 1 加粗 2__~~* 内联代码块 ctrl+alt+del 加粗 1 和 加粗 2 倾斜 1 和 倾斜 2 删除线 加粗 1 和 倾斜 1 加粗 2 和 倾斜 2 加粗 2 和 倾斜 1 加粗 1 和 倾斜 2 删除线 倾斜 1 和 删除线 倾斜 2 _删除线 倾斜 2_ 和 删除线 倾斜 2 删除线 加粗 1 和 删除线 加粗 1 __删除线 加粗 2__ 和 删除线 加粗 2 删除线 倾斜 1 加粗 1 和 删除线 倾斜 1 加粗 1 ___删除线 倾斜 2 加粗 2___ 和 删除线 倾斜 2 加粗 2 删除线 倾斜 1 加粗 1 和 删除线 倾斜 1 加粗 1 _删除线 倾斜 2 加粗 2_ 和 __删除线 倾斜 2 加粗 2__ _删除线 倾斜 2 加粗 1_ 和 删除线 倾斜 2 加粗 1 删除线 倾斜 1 加粗 2 和 __删除线 倾斜 1 加粗 2__ ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:8:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"6. 图片 Web image ![Web Picture](https://static.dillonzq.com/images/20190817130904-U6cPUk.jpg \"Web Picture\") Local image ![Local Picture](/images/Apple-Devices-Preview.png) contact@revolunet.com @revolunet Issue #1 https://github.com/revolunet/sublimetext-markdown-preview/ This is a link https://github.com/revolunet/sublimetext-markdown-preview/. This is a link \"https://github.com/revolunet/sublimetext-markdown-preview/\". With this link (https://github.com/revolunet/sublimetext-markdown-preview/), it still works. Web image Web PictureWeb Picture \"\rWeb Picture\r Local image https://www.google.com contact@revolunet.com @revolunet Issue #1 https://github.com/revolunet/sublimetext-markdown-preview/ This is a link https://github.com/revolunet/sublimetext-markdown-preview/. This is a link “https://github.com/revolunet/sublimetext-markdown-preview/\". With this link (https://github.com/revolunet/sublimetext-markdown-preview/), it still works. ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:9:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"Abbreviation Abbreviations source are found in a separate markdown file specified in frontmatter. The HTML specification is maintained by the W3C. *[HTML]: Hyper Text Markup Language *[W3C]: World Wide Web Consortium The HTML specification is maintained by the W3C. ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:10:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"Unordered List Unordered List - item 1 * item A * item B more text + item a + item b + item c * item C - item 2 - item 3 Unordered List item 1 item A item B more text item a item b item c item C item 2 item 3 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:11:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"Ordered List Ordered List 1. item 1 1. item A 2. item B more text 1. item a 2. item b 3. item c 3. item C 2. item 2 3. item 3 Ordered List item 1 item A item B more text item a item b item c item C item 2 item 3 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:12:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"Mixed Lists Really Mixed Lists should break with sane_lists on. Mixed Lists - item 1 * [X] item A * [ ] item B more text 1. item a 2. itemb 3. item c * [X] item C - item 2 - item 3 Really Mixed Lists - item 1 * [X] item A - item B more text 1. item a + itemb + [ ] item c 3. item C 2. item 2 - [X] item 3 Mixed Lists item 1 item A item B more text item a itemb item c item C item 2 item 3 Really Mixed Lists item 1 item A item B more text item a itemb item c item C item 2 item 3 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:13:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"Blocks This is a block. This is more of a block. This is a block. This is more of a block. ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:14:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"Block Quotes \u003e This is a block quote \u003e\u003e How does it look? This is a block quote. How does it look? I think it looks good. ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:15:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"Fenced Block Assuming guessing is not enabled. ``` // Fenced **without** highlighting function doIt() { for (var i = 1; i \u003c= slen ; i^^) { setTimeout(\"document.z.textdisplay.value = newMake()\", i*300); setTimeout(\"window.status = newMake()\", i*300); } } ``` ​```javascript // Fenced **with** highlighting function doIt() { for (var i = 1; i \u003c= slen ; i^^) { setTimeout(\"document.z.textdisplay.value = newMake()\", i*300); setTimeout(\"window.status = newMake()\", i*300); } } ``` // Fenced **without** highlighting function doIt() { for (var i = 1; i \u003c= slen ; i^^) { setTimeout(\"document.z.textdisplay.value = newMake()\", i*300); setTimeout(\"window.status = newMake()\", i*300); } } ​```javascript // Fenced with highlighting function doIt() { for (var i = 1; i \u003c= slen ; i^^) { setTimeout(“document.z.textdisplay.value = newMake()”, i300); setTimeout(“window.status = newMake()”, i300); } } ## Tables 颜色 水果 蔬菜 red 苹果 辣椒 橙色 橘子 胡萝卜 绿色 梨子 菠菜 | _颜色_ | 水果 | 蔬菜 | | ------------- |:---------------:| ------------:| | red | *苹果* | [辣椒](#) | | ~~橙色~~ | 橘子 | **胡萝卜** | | 绿色 | ~~***梨子***~~ | 菠菜 | Class or Enum | Year | Month | Day | Hours | Minutes | Seconds* | Zone Offset | Zone ID | toString Output | Where Discussed ----------------------- | ------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------- |:-------------------------------------------------------------------------------------:|:-------------------------------------------------------------------------------------:|:-------------------------------------------------------------------------------------:| ------------------------------------------------------------------------------------- |:-------------------------------------------------------------------------------------:|:-------------------------------------------------------------------------------------:| -------------------------------------------------- | --------------------------------------------------------------------------------------------------- `Instant` | | | | | | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | | | `2013-08-20T15:16:26.355Z` | [Instant Class](https://docs.oracle.com/javase/tutorial/datetime/iso/instant.html) `LocalDate` | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | | | | | | `2013-08-20` | [Date Classes](https://docs.oracle.com/javase/tutorial/datetime/iso/date.html) `LocalDateTime` | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | | | `2013-08-20T08:16:26.937` | [Date and Time Classes](https://docs.oracle.com/javase/tutorial/datetime/iso/datetime.html) `ZonedDateTime` | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | `2013-08-21T00:16:26.941+09:00[Asia/Tokyo]` | [Time Zone and Offset Classes](https://docs.oracle.com/javase/tutorial/datetime/iso/timezones.html) `LocalTime` | | | | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | | | `08:16:26.943` | [Date and Time Classes](https://docs.oracle.com/javase/tutorial/datetime/iso/datetime.html) `MonthDay` | | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | \u003ccenter\u003e![checked](/favicon-16x16.png)\u003c/center\u003e | | | | | | `--08-20` | [Date Classes](https://doc","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:16:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"People 👍👎👽👼💢😠😧😲👶💙😊💥🙇‍♂️:bowtie:👦👰💔👤👥👏😰💥😖😕👷‍♂️👮‍♂️👫👩‍❤️‍👨👩‍❤️‍💋‍👨😢😿💘💃👯‍♀️💨😞😥💫😵💧👂❗😑👀👊👨‍👩‍👦😨:feelsgood:🐾:finnadie:🔥✊😳😦🖕👧:goberserk::godmode:💚❕❔😬😁😀💂‍♂️💇‍♀️✋💩🙉❤️😍😻💓💗:hurtrealbad:😯👿💁‍♀️😇👺👹😂😹💋😗😽😚😘😙😆👄💌👨👲👳‍♂️😷💆‍♀️🤘💪🎵💅:neckbeard:😐🙅‍♀️😶👃🎶👌🙆‍♀️👴👵👐😮😔😣🙍‍♀️👱‍♂️🙎‍♀️👇👈👉☝️👆💩😾🙏👸👊💜❓😡:rage1::rage2::rage3::rage4:✋🙌🙋‍♀️☺️😌💞🏃‍♂️🏃😆😱🙀🙈💩💀😴😪😄😸😃😺😈😏😼😭✨💖🙊💬⭐🌟😛😝😜😎:suspect:😓💦😅💭👎👍😫👅😤:trollface:💕👬👭😒✌️🚶‍♂️👋😩😉👩😟💛😋💤 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:16:1","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"Nature 🐜🐤🐻🐝🐞🐦🌼🐡🐗💐🐛🌵🐫🐱🐈🌸🌰🐔☁️🐮🐄🌙🐊🌀🌳🐶🐕🐬🐉🐲🐪🌾🌍🌎🌏🐘🌲🍂🌓🌛🐟🌁🍀🐸🌕🌝🌐🐐🐹🐥🐣🌿🌺🐝🐴🐨🌗🌜🍃🐆🍁🌌🐒🐵🌔🐭🐁🍄🌑🌚🌃🌊:octocat:🐙🐂🌴🐼⛅🐾🐧🐷🐖🐽🐩🐰🐇🐎🐏🐀🐓🌹🌱🐑🐚🐌🐍❄️☃️:squirrel:🌞🌻☀️🐯🐅🐠🌷🐢☂️🌋🌘🌖🐃🌒🌔🐳🐋🐺⚡ ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:16:2","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"Objects 🎱⏰🍎🎨👟🍼🎈🎍🍌📊⚾🏀🛀🛁🔋🍺🍻🔔🍱🚴‍♂️👙🎂🃏✒️📘💣📖🔖📑📚👢🎳🍞💼💡🍰📆📲📷🍬📇💿📉📈🍒🍫🎄🎬📋📕🔐🌂♣️🍸☕💻🎊🍪🌽💳👑🔮🍛🍮🍡🎯📅♦️💵🎎🚪🍩👗📀📧🥚🍆🔌✉️✉📩💶👓📠📁🎆🍥🎣🎏🔦🐬💾🎴🏈👣🍴🍤🍟🎲💎👻🎁💝⛳🍇🍏📗🎸🔫🍔🔨👜🎧♥️🔆👠🔪🍯🏇⌛⏳🍨🍦📥📨📱🎃👖🔑👘🏮📒🍋💄🔒🔏🍭➿🔊📢🔅🔍🔎🀄📫📪📬📭👞🍖📣🍈📝🎤🔬💽💸💰🎓🚵‍♂️🎥🎹🎼🔇📛👔📰🔕📓📔🔩🍢📖📂📙📤📦📄📃📟📎🍑🍐✏✏️☎️💊🍍🍕📯📮👝🍗💷👛📌📻🍜🎀🍚🍙🍘🎑💍🏉🎽🍶👡🎅🛰️🎷🎒✂️📜💺🍧👕👞🚿🎿🚬🏂⚽🔉👾♠️🍝❇️🎇🔈🍲📏🍓🏄‍♂️🍣🍠🏊‍♂️💉🎉🎋🍊🍵☎📞🔭🎾🚽🍅🎩📐🏆🍹🎺👕📺🔓📼📹🎮🎻⌚🍉🎐🍷👚👒🔧💴 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:16:3","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"Places 🚡✈️🚑⚓🚛🏧🏦💈🔰🚲🚙⛵🌉🚅🚄🚌🚏🚗🎠🏁⛪🎪🌇🌆🇨🇳🚧🏪🎌🇩🇪🏬🇪🇸🏰🏤🏭🎡🚒⛲🇫🇷⛽🇬🇧🚁🏥🏨♨️🏠🏡🇮🇹🏮🗾🏯🇯🇵🇰🇷🚈🏩🚐🚝🗻🚠🚞🗿🏢🚘🚍🚔🚖🎭🚓🏣🚃🌈🚗🚀🎢🚨📍🚣‍♂️🇷🇺⛵🏫🚢🎰🚤🌠🚉🗽🚂🌅🌄🚟🚕⛺🎫🗼🚜🚥🚋🚆🚊🚩🚎🚚🇬🇧🇺🇸🚦⚠️💒 ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:16:4","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"Symbols 💯🔢🅰️🆎🔤🔡🉑♒♈◀️⏬⏫⬇️🔽▶️⤵️⤴️⬅️↙️↘️➡️↪️⬆️↕️🔼↖️↗️🔃🔄🅱️🚼🔙🛄☑️‼️⚫⬛◾◼️▪️🔲♋🔠♑💹🚸🎦🆑🕐🕙🕥🕚🕦🕛🕧🕜🕑🕝🕒🕞🕓🕟🕔🕠🕕🕡🕖🕢🕗🕣🕘🕤㊗️🆒©️➰💱🛃💠🚯8️⃣✴️✳️🔚⏩5️⃣4️⃣🆓♊#️⃣💟✔️➗💲❗➖✖️➕🆔🉐ℹ️⁉️🔟🈁🔵🔷🔶🛅↔️↩️♌♎🔗ⓜ️🚹🚇📴❎🆕🆖9️⃣🚳⛔🚫📵🚷🚭🚱⭕🅾️🆗🔛1️⃣⛎🅿️〽️🛂♓🚰🚮🔘♻️🔴®️🔁🔂🚻⏪🈂️♐♏㊙️7️⃣:shipit:📶6️⃣🔯🔹🔸🔺🔻🔜🆘🔣♉3️⃣™️🔝🔱🔀2️⃣🈹🈴🈺🈯🈷️🈶🈵🈚🈸🈲🈳🔞🆙📳♍🆚〰️🚾♿✅⚪💮⬜◽◻️▫️🔳🚺❌0️⃣ ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:16:5","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"Insert ^^insert^^ ^^*insert 倾斜*^^ *^^insert 倾斜 2^^* ^^_insert 倾斜_^^ _^^insert 倾斜 2^^_ ^^**insert 加粗**^^ **^^insert 加粗 2^^** ^^__insert 加粗__^^ __^^insert 加粗 2^^__ ^^***insert 倾斜 加粗***^^ ***^^insert 倾斜 加粗 2^^*** ^^___insert 倾斜 加粗___^^ ___^^insert 倾斜 加粗 2^^___ **^^*insert 倾斜 加粗*^^** *^^**insert 倾斜 加粗 2**^^* __^^_insert 倾斜 加粗_^^__ _^^__insert 倾斜 加粗 2__^^_ **^^_insert 倾斜 加粗_^^** _^^**insert 倾斜 加粗 2**^^_ __^^*insert 倾斜 加粗*^^__ *^^__insert 倾斜 加粗 2__^^* ^^insert^^ ^^insert 倾斜^^ ^^insert 倾斜 2^^ ^^_insert 倾斜_^^ ^^insert 倾斜 2^^ ^^insert 加粗^^ ^^insert 加粗 2^^ ^^__insert 加粗__^^ ^^insert 加粗 2^^ ^^insert 倾斜 加粗^^ ^^insert 倾斜 加粗 2^^ ^^___insert 倾斜 加粗___^^ ^^insert 倾斜 加粗 2^^ ^^insert 倾斜 加粗^^ ^^insert 倾斜 加粗 2^^ ^^_insert 倾斜 加粗_^^ ^^__insert 倾斜 加粗 2__^^ ^^_insert 倾斜 加粗_^^ ^^insert 倾斜 加粗 2^^ ^^insert 倾斜 加粗^^ ^^__insert 倾斜 加粗 2__^^ ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:17:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":["documentation"],"content":"Admonition Admonition note\r\rThis is the content of the admonition.\r\r Admonition abstract\r\rThis is the content of the admonition.\r\r Admonition info\r\rThis is the content of the admonition.\r\r Admonition tip\r\rThis is the content of the admonition.\r\r Admonition success\r\rThis is the content of the admonition.\r\r Admonition question\r\rThis is the content of the admonition.\r\r Admonition warning\r\rThis is the content of the admonition.\r\r Admonition failure\r\rThis is the content of the admonition.\r\r Admonition danger\r\rThis is the content of the admonition.\r\r Admonition bug\r\rThis is the content of the admonition.\r\r Admonition example\r\rThis is the content of the admonition.\r\r Admonition quote\r\rThis is the content of the admonition.\r\r Admonition\r\rThis is the content of the admonition.\r\r 这是一个基本的数字脚注 ↩︎ 带有 “label” 标签的脚注 ↩︎ 下定义的脚注 ↩︎ LoveIt 主题 ↩︎ ","date":"2020-02-24","objectID":"/basic-markdown-preview.zh/:18:0","tags":["语法","教程","Markdown"],"title":"Markdown 基本语法预览","uri":"/basic-markdown-preview.zh/"},{"categories":null,"content":"关于作者 ","date":"2020-02-04","objectID":"/about/:0:0","tags":null,"title":"关于作者","uri":"/about/"},{"categories":null,"content":"1.第一次搭建博客是在2019年12月，那时候抱着试一试的心态去搭建。看着教程视频不断地摸索尝试，再本地运行博客成功了，但是当我一上传到我的服务器的时候出现了错误：好多图片都显示不出来、一些布局错误、字体大小不符合规范等等，于是我就放弃了，准备以后再搭建。第一次搭建博客就以失败告终了┭┮﹏┭┮ ","date":"2020-02-04","objectID":"/about/:1:0","tags":null,"title":"关于作者","uri":"/about/"},{"categories":null,"content":"2.第二次搭建博客是在2020年2月，那次准备好好搭建一个博客了。重新看了教程视频，重新搭建了运行环境。又搜索了大量的相关知识，虽然搭建的过程中也出现了一些不满意的地方，但是我都努力去解决，在解决的过程中，我学到了许多知识。花费了我差不多一天的时间最终完成了(๑•̀ㅂ•́)و✧ ","date":"2020-02-04","objectID":"/about/:2:0","tags":null,"title":"关于作者","uri":"/about/"},{"categories":null,"content":"3.第三次搭建博客实在2020年2月23日，这次有了上次的经验准备搭建了一个更强大的博客。找主题花了大概半个多小时，所谓***”套用两分钟，调色两小时“***，然后调试运行再调试再运行反反复复终于达到了自己比较满意的界面了，完成这个博客的搭建最终花费了我不到两天的时间，就是你现在看到的博客。(o•̀▽•́)o☆[BINGO!] ","date":"2020-02-04","objectID":"/about/:3:0","tags":null,"title":"关于作者","uri":"/about/"},{"categories":null,"content":"4.自己在这里立个FLAG吧！ 1.嘿嘿！应该没人会看到的。 2.每两周至少更新一篇中文博客。 3.每两周至少更新一篇英文博客。 虽然FLAG不大，但坚持下来，也是又难度的。我相信纪念之后，我一定会收获很多宝贵的Treasure的**(u‿ฺu✿ฺ)** ","date":"2020-02-04","objectID":"/about/:4:0","tags":null,"title":"关于作者","uri":"/about/"},{"categories":["life"],"content":"请勿非法使用，一切后果将由您本人承担 西苑-南院北门-出西苑-南院北门-出 \"\r西苑-南院北门-出\r 西苑-南院北门-进西苑-南院北门-进 \"\r西苑-南院北门-进\r ","date":"2020-01-01","objectID":"/qrcode/:0:0","tags":["二维码"],"title":"学校二维码","uri":"/qrcode/"}]